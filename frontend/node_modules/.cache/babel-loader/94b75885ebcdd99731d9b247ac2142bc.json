{"ast":null,"code":"import Axios from \"axios\";\nimport { CART_ADD_ITEM, CART_ADD_ITEM_FAIL, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from \"../constants/cartConstants\"; // export const addToCart = (productId, qty) => async (dispatch, getState) =>{\n//     const { data } = await Axios.get(`/api/products/${productId}`);\n//     dispatch({\n//         type: CART_ADD_ITEM,\n//         payload: {\n//             name: data.name,\n//             image: data.image,\n//             price: data.price,\n//             countInStock: data.countInStock,\n//             product: data._id,\n//             seller: data.seller,\n//             qty,\n//         },\n//     });\n//     localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n// }\n\nexport const addToCart = (productId, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await Axios.get(`/api/products/${productId}`);\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState();\n\n  if (cartItems.length > 0 && data.seller._id !== cartItems[0].seller) {\n    dispatch({\n      type: CART_ADD_ITEM_FAIL,\n      payload: \"Can not Add to Cart. Buy from one seller at a time chawakam\"\n    });\n  }\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      product: data._id,\n      seller: data.seller,\n      qty\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const removeFromCart = productId => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: productId\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n};","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/src/actions/cartActions.js"],"names":["Axios","CART_ADD_ITEM","CART_ADD_ITEM_FAIL","CART_REMOVE_ITEM","CART_SAVE_PAYMENT_METHOD","CART_SAVE_SHIPPING_ADDRESS","addToCart","productId","qty","dispatch","getState","data","get","cart","cartItems","length","seller","_id","type","payload","name","image","price","countInStock","product","localStorage","setItem","JSON","stringify","removeFromCart","saveShippingAddress","savePaymentMethod"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,aAAR,EACQC,kBADR,EAEQC,gBAFR,EAIQC,wBAJR,EAKQC,0BALR,QAKyC,4BALzC,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,GAAZ,KAAoB,OAAOC,QAAP,EAAiBC,QAAjB,KAA6B;AACtE,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMX,KAAK,CAACY,GAAN,CAAW,iBAAgBL,SAAU,EAArC,CAAvB;AACA,QAAM;AAACM,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAP,MAAsBJ,QAAQ,EAApC;;AACA,MAAGI,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBJ,IAAI,CAACK,MAAL,CAAYC,GAAZ,KAAoBH,SAAS,CAAC,CAAD,CAAT,CAAaE,MAA5D,EAAmE;AAC/DP,IAAAA,QAAQ,CAAC;AACLS,MAAAA,IAAI,EAAEhB,kBADD;AAELiB,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH;;AACDV,EAAAA,QAAQ,CAAC;AACLS,IAAAA,IAAI,EAAEjB,aADD;AAELkB,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAET,IAAI,CAACS,IADN;AAELC,MAAAA,KAAK,EAAEV,IAAI,CAACU,KAFP;AAGLC,MAAAA,KAAK,EAAEX,IAAI,CAACW,KAHP;AAILC,MAAAA,YAAY,EAAEZ,IAAI,CAACY,YAJd;AAKLC,MAAAA,OAAO,EAAEb,IAAI,CAACM,GALT;AAMLD,MAAAA,MAAM,EAAEL,IAAI,CAACK,MANR;AAOLR,MAAAA;AAPK;AAFJ,GAAD,CAAR;AAYAiB,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAelB,QAAQ,GAAGG,IAAX,CAAgBC,SAA/B,CAAlC;AACH,CAtBM;AAyBP,OAAO,MAAMe,cAAc,GAAItB,SAAD,IAAe,CAACE,QAAD,EAAWC,QAAX,KAAwB;AACjED,EAAAA,QAAQ,CAAC;AAACS,IAAAA,IAAI,EAAEf,gBAAP;AAAyBgB,IAAAA,OAAO,EAAEZ;AAAlC,GAAD,CAAR;AACAkB,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAelB,QAAQ,GAAGG,IAAX,CAAgBC,SAA/B,CAAlC;AACH,CAHM;AAMP,OAAO,MAAMgB,mBAAmB,GAAInB,IAAD,IAAWF,QAAD,IAAa;AACtDA,EAAAA,QAAQ,CAAC;AAACS,IAAAA,IAAI,EAAEb,0BAAP;AAAmCc,IAAAA,OAAO,EAAER;AAA5C,GAAD,CAAR;AACAc,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAejB,IAAf,CAAxC;AACH,CAHM;AAKP,OAAO,MAAMoB,iBAAiB,GAAIpB,IAAD,IAAWF,QAAD,IAAa;AACpDA,EAAAA,QAAQ,CAAC;AAACS,IAAAA,IAAI,EAAEd,wBAAP;AAAiCe,IAAAA,OAAO,EAAER;AAA1C,GAAD,CAAR;AACH,CAFM","sourcesContent":["import Axios from \"axios\";\n\nimport {CART_ADD_ITEM,\n        CART_ADD_ITEM_FAIL,\n        CART_REMOVE_ITEM,\n\n        CART_SAVE_PAYMENT_METHOD,\n        CART_SAVE_SHIPPING_ADDRESS} from \"../constants/cartConstants\";\n\n// export const addToCart = (productId, qty) => async (dispatch, getState) =>{\n//     const { data } = await Axios.get(`/api/products/${productId}`);\n//     dispatch({\n//         type: CART_ADD_ITEM,\n//         payload: {\n//             name: data.name,\n//             image: data.image,\n//             price: data.price,\n//             countInStock: data.countInStock,\n//             product: data._id,\n//             seller: data.seller,\n//             qty,\n//         },\n//     });\n//     localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n// }\n\n\nexport const addToCart = (productId, qty) => async (dispatch, getState) =>{\n    const { data } = await Axios.get(`/api/products/${productId}`);\n    const {cart: {cartItems}} = getState();\n    if(cartItems.length > 0 && data.seller._id !== cartItems[0].seller){\n        dispatch({\n            type: CART_ADD_ITEM_FAIL,\n            payload: \"Can not Add to Cart. Buy from one seller at a time chawakam\"\n        })\n    }\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            product: data._id,\n            seller: data.seller,\n            qty,\n        },\n    });\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n}\n\n\nexport const removeFromCart = (productId) => (dispatch, getState) => {\n    dispatch({type: CART_REMOVE_ITEM, payload: productId});\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\n\nexport const saveShippingAddress = (data) => (dispatch) =>{\n    dispatch({type: CART_SAVE_SHIPPING_ADDRESS, payload: data});\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) =>{\n    dispatch({type: CART_SAVE_PAYMENT_METHOD, payload: data});\n}"]},"metadata":{},"sourceType":"module"}