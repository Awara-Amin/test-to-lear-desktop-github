{"ast":null,"code":"var _jsxFileName = \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/amazona-1/amazona/frontend/src/screens/ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport Axios from \"axios\";\nimport { detailsProduct, updateProduct } from \"../actions/productActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProductEditScreen(props) {\n  _s();\n\n  const productId = props.match.params.id;\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successUpdate) {\n      //  dispatch({type: PRODUCT_UPDATE_RESET});\n      props.history.push(\"/productlist\");\n    } // if (!product.name){\n\n\n    if (!product || product._id !== productId || successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      dispatch(detailsProduct(productId));\n    } else {\n      setName(product.name);\n      setPrice(product.price);\n      setImage(product.image);\n      setImages(product.images);\n      setCategory(product.category);\n      setCountInStock(product.countInStock);\n      setBrand(product.brand);\n      setDescription(product.description);\n    }\n  }, [product, dispatch, productId, successUpdate, props.history]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // todo: dispatch update product\n\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      images,\n      category,\n      brand,\n      size,\n      color,\n      countInStock,\n      description\n    }));\n  };\n\n  const [loadingUpload, setLoadingUpload] = useState(false);\n  const [errorUpload, setErrorUpload] = useState(\"\");\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n\n  const uploadFileHandler = async (e, forImages) => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"image\", file); // setLoadingUpload(true);\n\n    try {\n      const {\n        data\n      } = await Axios.post(\"/api/uploads\", bodyFormData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      }); //   images\n\n      if (forImages) {\n        setImages([...images, data]);\n      } else {\n        setImage(data); // setLoadingUpload(false);\n      }\n    } catch (error) {\n      setErrorUpload(error.message); //   setLoadingUpload(false);\n    }\n  };\n\n  const deleteFileHandler = async fileName => {\n    setImages(images.filter(x => x !== fileName));\n    console.log(\"hi\");\n  }; // UI part\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Edit Product \", productId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 27\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"price\",\n            type: \"text\",\n            placeholder: \"Enter Price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"image\",\n            type: \"text\",\n            placeholder: \"Image\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"imagefile\",\n            children: \"Upload Image \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"imagefile\",\n            label: \"Upload Image\",\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), loadingUpload && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"additionalImage\",\n            children: \"Additional Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"additionalImage\",\n            value: images\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), images.length === 0 && /*#__PURE__*/_jsxDEV(MessageBox, {\n            children: \"No image kako\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 39\n          }, this), images.map((x, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [x, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteFileHandler(x),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-times-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"additionalImageFile\",\n            children: \"Upload Additional Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"additionalImageFile\" // label=\"Choose Image\"\n            ,\n            label: \"Upload additional Image\",\n            onChange: e => uploadFileHandler(e, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), loadingUpload && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"category\",\n            type: \"text\",\n            placeholder: \"Enter category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"brand\",\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"brand\",\n            type: \"text\",\n            placeholder: \"Enter Brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"size\",\n            children: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"size\",\n            name: \"size\",\n            type: \"text\",\n            placeholder: \"Enter Size: Small, Medium, Large\",\n            value: size,\n            onChange: e => setSize(e.target.value.split(\",\"))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"color\",\n            children: \"Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"color\",\n            name: \"color\",\n            type: \"text\",\n            placeholder: \"Enter Color: Such as: Red, Green, White, or so\",\n            value: color,\n            onChange: e => setColor(e.target.value.split(\",\"))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"countInStock\",\n            children: \"Count In Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"countInStock\",\n            type: \"text\",\n            placeholder: \"Enter countInStock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            rows: \"3\",\n            type: \"text\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductEditScreen, \"q3u3ce54qYJmIFYZj7a0vzMTvoc=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n\n_c = ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/amazona-1/amazona/frontend/src/screens/ProductEditScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Axios","detailsProduct","updateProduct","LoadingBox","MessageBox","PRODUCT_UPDATE_RESET","ProductEditScreen","props","productId","match","params","id","name","setName","price","setPrice","image","setImage","images","setImages","category","setCategory","countInStock","setCountInStock","brand","setBrand","size","setSize","color","setColor","description","setDescription","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","dispatch","history","push","_id","type","submitHandler","e","preventDefault","loadingUpload","setLoadingUpload","errorUpload","setErrorUpload","userSignin","userInfo","uploadFileHandler","forImages","file","target","files","bodyFormData","FormData","append","data","post","headers","Authorization","token","message","deleteFileHandler","fileName","filter","x","console","log","value","length","map","index","split"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,2BAA9C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,oBAAT,QAAqC,+BAArC;;;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAC/C,QAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsB,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC0B,YAAD,EAAeC,eAAf,IAAkC3B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC4B,KAAD,EAAQC,QAAR,IAAoB7B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC8B,IAAD,EAAOC,OAAP,IAAkB/B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgC,KAAD,EAAQC,QAAR,IAAoBjC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkC,WAAD,EAAcC,cAAd,IAAgCnC,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMoC,cAAc,GAAGjC,WAAW,CAAEkC,KAAD,IAAWA,KAAK,CAACD,cAAlB,CAAlC;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA8BJ,cAApC;AAEA,QAAMK,aAAa,GAAGtC,WAAW,CAAEkC,KAAD,IAAWA,KAAK,CAACI,aAAlB,CAAjC;AACA,QAAM;AACJH,IAAAA,OAAO,EAAEI,aADL;AAEJH,IAAAA,KAAK,EAAEI,WAFH;AAGJC,IAAAA,OAAO,EAAEC;AAHL,MAIFJ,aAJJ;AAMA,QAAMK,QAAQ,GAAG5C,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4C,aAAJ,EAAmB;AACjB;AACAlC,MAAAA,KAAK,CAACoC,OAAN,CAAcC,IAAd,CAAmB,cAAnB;AACD,KAJa,CAMd;;;AACA,QAAI,CAACR,OAAD,IAAYA,OAAO,CAACS,GAAR,KAAgBrC,SAA5B,IAAyCiC,aAA7C,EAA4D;AAC1DC,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEzC;AAAR,OAAD,CAAR;AACAqC,MAAAA,QAAQ,CAACzC,cAAc,CAACO,SAAD,CAAf,CAAR;AACD,KAHD,MAGO;AACLK,MAAAA,OAAO,CAACuB,OAAO,CAACxB,IAAT,CAAP;AACAG,MAAAA,QAAQ,CAACqB,OAAO,CAACtB,KAAT,CAAR;AACAG,MAAAA,QAAQ,CAACmB,OAAO,CAACpB,KAAT,CAAR;AACAG,MAAAA,SAAS,CAACiB,OAAO,CAAClB,MAAT,CAAT;AACAG,MAAAA,WAAW,CAACe,OAAO,CAAChB,QAAT,CAAX;AACAG,MAAAA,eAAe,CAACa,OAAO,CAACd,YAAT,CAAf;AACAG,MAAAA,QAAQ,CAACW,OAAO,CAACZ,KAAT,CAAR;AACAO,MAAAA,cAAc,CAACK,OAAO,CAACN,WAAT,CAAd;AACD;AACF,GApBQ,EAoBN,CAACM,OAAD,EAAUM,QAAV,EAAoBlC,SAApB,EAA+BiC,aAA/B,EAA8ClC,KAAK,CAACoC,OAApD,CApBM,CAAT;;AAsBA,QAAMI,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF,GAD2B,CAE3B;;AACAP,IAAAA,QAAQ,CACNxC,aAAa,CAAC;AACZ2C,MAAAA,GAAG,EAAErC,SADO;AAEZI,MAAAA,IAFY;AAGZE,MAAAA,KAHY;AAIZE,MAAAA,KAJY;AAKZE,MAAAA,MALY;AAMZE,MAAAA,QANY;AAOZI,MAAAA,KAPY;AAQZE,MAAAA,IARY;AASZE,MAAAA,KATY;AAUZN,MAAAA,YAVY;AAWZQ,MAAAA;AAXY,KAAD,CADP,CAAR;AAeD,GAlBD;;AAoBA,QAAM,CAACoB,aAAD,EAAgBC,gBAAhB,IAAoCvD,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACwD,WAAD,EAAcC,cAAd,IAAgCzD,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM0D,UAAU,GAAGvD,WAAW,CAAEkC,KAAD,IAAWA,KAAK,CAACqB,UAAlB,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeD,UAArB;;AAEA,QAAME,iBAAiB,GAAG,OAAOR,CAAP,EAAUS,SAAV,KAAwB;AAChD,UAAMC,IAAI,GAAGV,CAAC,CAACW,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,UAAMC,YAAY,GAAG,IAAIC,QAAJ,EAArB;AACAD,IAAAA,YAAY,CAACE,MAAb,CAAoB,OAApB,EAA6BL,IAA7B,EAHgD,CAIhD;;AACA,QAAI;AACF,YAAM;AAAEM,QAAAA;AAAF,UAAW,MAAMhE,KAAK,CAACiE,IAAN,CAAW,cAAX,EAA2BJ,YAA3B,EAAyC;AAC9DK,QAAAA,OAAO,EAAE;AACP,0BAAgB,qBADT;AAEPC,UAAAA,aAAa,EAAG,UAASZ,QAAQ,CAACa,KAAM;AAFjC;AADqD,OAAzC,CAAvB,CADE,CAQF;;AACA,UAAIX,SAAJ,EAAe;AACbtC,QAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY8C,IAAZ,CAAD,CAAT;AACD,OAFD,MAEO;AACL/C,QAAAA,QAAQ,CAAC+C,IAAD,CAAR,CADK,CAEL;AACD;AACF,KAfD,CAeE,OAAO7B,KAAP,EAAc;AACdkB,MAAAA,cAAc,CAAClB,KAAK,CAACkC,OAAP,CAAd,CADc,CAEd;AACD;AACF,GAxBD;;AA0BA,QAAMC,iBAAiB,GAAG,MAAOC,QAAP,IAAoB;AAC5CpD,IAAAA,SAAS,CAACD,MAAM,CAACsD,MAAP,CAAeC,CAAD,IAAOA,CAAC,KAAKF,QAA3B,CAAD,CAAT;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,GAHD,CAlG+C,CAsG/C;;;AACA,sBACE;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAE5B,aAAjC;AAAA,8BACE;AAAA,+BACE;AAAA,sCAAkBvC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIG8B,aAAa,iBAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAJpB,EAKGC,WAAW,iBAAI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,QAApB;AAAA,kBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,cALlB,EAOGL,OAAO,gBACN,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADM,GAEJC,KAAK,gBACP,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,QAApB;AAAA,kBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,cADO,gBAGP;AAAA,gCACE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,EAAE,EAAC,MADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,YAHd;AAIE,YAAA,KAAK,EAAEvB,IAJT;AAKE,YAAA,QAAQ,EAAGoC,CAAD,IAAOnC,OAAO,CAACmC,CAAC,CAACW,MAAF,CAASiB,KAAV;AAL1B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,EAAE,EAAC,OADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,aAHd;AAIE,YAAA,KAAK,EAAE9D,KAJT;AAKE,YAAA,QAAQ,EAAGkC,CAAD,IAAOjC,QAAQ,CAACiC,CAAC,CAACW,MAAF,CAASiB,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAuBE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,EAAE,EAAC,OADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,OAHd;AAIE,YAAA,KAAK,EAAE5D,KAJT;AAKE,YAAA,QAAQ,EAAGgC,CAAD,IAAO/B,QAAQ,CAAC+B,CAAC,CAACW,MAAF,CAASiB,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF,eAkCE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,EAAE,EAAC,WAFL;AAGE,YAAA,KAAK,EAAC,cAHR;AAIE,YAAA,QAAQ,EAAEpB;AAJZ;AAAA;AAAA;AAAA;AAAA,kBAFF,EAQGN,aAAa,iBAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBARpB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCF,eA8CE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAU,YAAA,EAAE,EAAC,iBAAb;AAA+B,YAAA,KAAK,EAAEhC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGGA,MAAM,CAAC2D,MAAP,KAAkB,CAAlB,iBAAuB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAH1B,EAIG3D,MAAM,CAAC4D,GAAP,CAAW,CAACL,CAAD,EAAIM,KAAJ,kBACV;AAAA,uBACGN,CADH,eAEE;AAAQ,cAAA,OAAO,EAAE,MAAMH,iBAAiB,CAACG,CAAD,CAAxC;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,aAASM,KAAT;AAAA;AAAA;AAAA;AAAA,kBADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9CF,eA6DE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,EAAE,EAAC,qBAFL,CAGE;AAHF;AAIE,YAAA,KAAK,EAAC,yBAJR;AAKE,YAAA,QAAQ,EAAG/B,CAAD,IAAOQ,iBAAiB,CAACR,CAAD,EAAI,IAAJ;AALpC;AAAA;AAAA;AAAA;AAAA,kBAJF,EAYGE,aAAa,iBAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAZpB;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7DF,eA4EE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,EAAE,EAAC,UADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,gBAHd;AAIE,YAAA,KAAK,EAAE9B,QAJT;AAKE,YAAA,QAAQ,EAAG4B,CAAD,IAAO3B,WAAW,CAAC2B,CAAC,CAACW,MAAF,CAASiB,KAAV;AAL9B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5EF,eAuFE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,EAAE,EAAC,OADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,aAHd;AAIE,YAAA,KAAK,EAAEpD,KAJT;AAKE,YAAA,QAAQ,EAAGwB,CAAD,IAAOvB,QAAQ,CAACuB,CAAC,CAACW,MAAF,CAASiB,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvFF,eAkGE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,EAAE,EAAC,MADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,WAAW,EAAC,kCAJd;AAKE,YAAA,KAAK,EAAElD,IALT;AAME,YAAA,QAAQ,EAAGsB,CAAD,IAAOrB,OAAO,CAACqB,CAAC,CAACW,MAAF,CAASiB,KAAT,CAAeI,KAAf,CAAqB,GAArB,CAAD;AAN1B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlGF,eA8GE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,EAAE,EAAC,OADL;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,WAAW,EAAC,gDAJd;AAKE,YAAA,KAAK,EAAEpD,KALT;AAME,YAAA,QAAQ,EAAGoB,CAAD,IAAOnB,QAAQ,CAACmB,CAAC,CAACW,MAAF,CAASiB,KAAT,CAAeI,KAAf,CAAqB,GAArB,CAAD;AAN3B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9GF,eA0HE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,EAAE,EAAC,cADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,oBAHd;AAIE,YAAA,KAAK,EAAE1D,YAJT;AAKE,YAAA,QAAQ,EAAG0B,CAAD,IAAOzB,eAAe,CAACyB,CAAC,CAACW,MAAF,CAASiB,KAAV;AALlC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1HF,eAqIE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,EAAE,EAAC,aADL;AAEE,YAAA,IAAI,EAAC,GAFP;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,WAAW,EAAC,mBAJd;AAKE,YAAA,KAAK,EAAE9C,WALT;AAME,YAAA,QAAQ,EAAGkB,CAAD,IAAOjB,cAAc,CAACiB,CAAC,CAACW,MAAF,CAASiB,KAAV;AANjC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBArIF,eAiJE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,SAAS,EAAC,SAAlB;AAA4B,YAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjJF;AAAA,sBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0KD;;GAjRuBtE,iB;UAaCP,W,EAGDA,W,EAOLD,W,EA8CEC,W;;;KArEGO,iB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport Axios from \"axios\";\nimport { detailsProduct, updateProduct } from \"../actions/productActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\n\nexport default function ProductEditScreen(props) {\n  const productId = props.match.params.id;\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (successUpdate) {\n      //  dispatch({type: PRODUCT_UPDATE_RESET});\n      props.history.push(\"/productlist\");\n    }\n\n    // if (!product.name){\n    if (!product || product._id !== productId || successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      dispatch(detailsProduct(productId));\n    } else {\n      setName(product.name);\n      setPrice(product.price);\n      setImage(product.image);\n      setImages(product.images);\n      setCategory(product.category);\n      setCountInStock(product.countInStock);\n      setBrand(product.brand);\n      setDescription(product.description);\n    }\n  }, [product, dispatch, productId, successUpdate, props.history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // todo: dispatch update product\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        images,\n        category,\n        brand,\n        size,\n        color,\n        countInStock,\n        description,\n      })\n    );\n  };\n\n  const [loadingUpload, setLoadingUpload] = useState(false);\n  const [errorUpload, setErrorUpload] = useState(\"\");\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  const uploadFileHandler = async (e, forImages) => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"image\", file);\n    // setLoadingUpload(true);\n    try {\n      const { data } = await Axios.post(\"/api/uploads\", bodyFormData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      });\n\n      //   images\n      if (forImages) {\n        setImages([...images, data]);\n      } else {\n        setImage(data);\n        // setLoadingUpload(false);\n      }\n    } catch (error) {\n      setErrorUpload(error.message);\n      //   setLoadingUpload(false);\n    }\n  };\n\n  const deleteFileHandler = async (fileName) => {\n    setImages(images.filter((x) => x !== fileName));\n    console.log(\"hi\");\n  };\n  // UI part\n  return (\n    <div>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div>\n          <h1>Edit Product {productId}</h1>\n        </div>\n        {loadingUpdate && <LoadingBox></LoadingBox>}\n        {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n\n        {loading ? (\n          <LoadingBox></LoadingBox>\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <>\n            <div>\n              <label htmlFor=\"name\">Name</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></input>\n            </div>\n\n            <div>\n              <label htmlFor=\"price\">Price</label>\n              <input\n                id=\"price\"\n                type=\"text\"\n                placeholder=\"Enter Price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></input>\n            </div>\n\n            <div>\n              <label htmlFor=\"image\">Image</label>\n              <input\n                id=\"image\"\n                type=\"text\"\n                placeholder=\"Image\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></input>\n            </div>\n\n            <div>\n              <label htmlFor=\"imagefile\">Upload Image </label>\n              <input\n                type=\"file\"\n                id=\"imagefile\"\n                label=\"Upload Image\"\n                onChange={uploadFileHandler}\n              ></input>\n              {loadingUpload && <LoadingBox></LoadingBox>}\n            </div>\n\n            {/* additional image */}\n            <div>\n              <label htmlFor=\"additionalImage\">Additional Images</label>\n              <textarea id=\"additionalImage\" value={images}></textarea>\n              {images.length === 0 && <MessageBox>No image kako</MessageBox>}\n              {images.map((x, index) => (\n                <li key={index}>\n                  {x}\n                  <button onClick={() => deleteFileHandler(x)}>\n                    <i className=\"fa fa-times-circle\"></i>\n                  </button>\n                </li>\n              ))}\n            </div>\n\n            {/* another additinal image */}\n            <div>\n              <label htmlFor=\"additionalImageFile\">\n                Upload Additional Image\n              </label>\n              <input\n                type=\"file\"\n                id=\"additionalImageFile\"\n                // label=\"Choose Image\"\n                label=\"Upload additional Image\"\n                onChange={(e) => uploadFileHandler(e, true)}\n              ></input>\n              {/* {images.length === 0 && <MessageBox>No image kaka</MessageBox>} */}\n              {loadingUpload && <LoadingBox></LoadingBox>}\n            </div>\n\n            <div>\n              <label htmlFor=\"category\">Category</label>\n              <input\n                id=\"category\"\n                type=\"text\"\n                placeholder=\"Enter category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></input>\n            </div>\n\n            <div>\n              <label htmlFor=\"brand\">Brand</label>\n              <input\n                id=\"brand\"\n                type=\"text\"\n                placeholder=\"Enter Brand\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></input>\n            </div>\n\n            <div>\n              <label htmlFor=\"size\">Size</label>\n              <input\n                id=\"size\"\n                name=\"size\"\n                type=\"text\"\n                placeholder=\"Enter Size: Small, Medium, Large\"\n                value={size}\n                onChange={(e) => setSize(e.target.value.split(\",\"))}\n              ></input>\n            </div>\n\n            <div>\n              <label htmlFor=\"color\">Color</label>\n              <input\n                id=\"color\"\n                name=\"color\"\n                type=\"text\"\n                placeholder=\"Enter Color: Such as: Red, Green, White, or so\"\n                value={color}\n                onChange={(e) => setColor(e.target.value.split(\",\"))}\n              ></input>\n            </div>\n\n            <div>\n              <label htmlFor=\"countInStock\">Count In Stock</label>\n              <input\n                id=\"countInStock\"\n                type=\"text\"\n                placeholder=\"Enter countInStock\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></input>\n            </div>\n\n            <div>\n              <label htmlFor=\"description\">Description</label>\n              <textarea\n                id=\"description\"\n                rows=\"3\"\n                type=\"text\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></textarea>\n            </div>\n\n            <div>\n              <label></label>\n              <button className=\"primary\" type=\"submit\">\n                Update\n              </button>\n            </div>\n          </>\n        )}\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}