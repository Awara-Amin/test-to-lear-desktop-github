{"ast":null,"code":"import { CART_ADD_ITEM } from \"../constants/cartConstants\";\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map"],"mappings":"AACA,SAAQA,aAAR,QAA4B,4BAA5B;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAoC;AAAA,MAAnCC,KAAmC,uEAA3B;AAACC,IAAAA,SAAS,EAAE;AAAZ,GAA2B;AAAA,MAAVC,MAAU;;AAC3D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,aAAL;AACI,YAAMM,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;AACA,UAAGH,SAAH,EAAa;AACT,eAAM,EACF,GAAGN,KADD;AAEFC,UAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAqBF,CAAD,IAC9BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAD/B;AAFR,SAAN;AAMC,OAPL,MAOS;AACD,eAAO,EAAE,GAAGR,KAAL;AAAYC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAAvB,SAAP;AAEC;;AACD;AACI,aAAOJ,KAAP;AAhBpB;AAkBS,CAnBN","sourcesContent":["\nimport {CART_ADD_ITEM} from \"../constants/cartConstants\";\n\nexport const cartReducer = (state = {cartItems: []}, action) =>{\n    switch(action.type){\n        case CART_ADD_ITEM:\n            const item = action.payload;\n            const existItem = state.cartItems.find((x) => x.product === item.product);\n            if(existItem){\n                return{\n                    ...state,\n                    cartItems:state.cartItems.map((x) => \n                    x.product === existItem.product ? item : x),\n                };\n                \n                }else{\n                    return { ...state, cartItems: [...state.cartItems, item]};\n                        \n                    }\n                    default:\n                        return state;\n                }\n            };\n\n\n\n"]},"metadata":{},"sourceType":"module"}