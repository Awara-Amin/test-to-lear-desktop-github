{"ast":null,"code":"import _slicedToArray from \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/src/screens/ProfileScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nexport default function ProfileScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1]; // seller hooks kaka\n\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      sellerName = _useState10[0],\n      setSellerName = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      sellerLogo = _useState12[0],\n      setSellerLogo = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      sellerDescription = _useState14[0],\n      setSellerDescription = _useState14[1];\n\n  var userSignin = useSelector(function (state) {\n    return state.userSignin;\n  });\n  var userInfo = userSignin.userInfo;\n  var userDetails = useSelector(function (state) {\n    return state.userDetails;\n  });\n  var loading = userDetails.loading,\n      error = userDetails.error,\n      user = userDetails.user;\n  var userUpdateProfile = useSelector(function (state) {\n    return state.userUpdateProfile;\n  });\n  var successUpdate = userUpdateProfile.success,\n      errorUpdate = userUpdateProfile.error,\n      loadingUpdate = userUpdateProfile.loading;\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (!user) {\n      dispatch({\n        type: USER_UPDATE_PROFILE_RESET\n      });\n      dispatch(detailsUser(userInfo._id));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n\n      if (user.seller) {\n        setSellerName(user.seller.name);\n        setSellerLogo(user.seller.logo);\n        setSellerDescription(user.seller.description);\n      }\n    }\n  }, [dispatch, userInfo._id, user]);\n\n  var submitHandler = function submitHandler(e) {\n    e.preventDefault(); // dispatch update profile\n\n    if (password !== confirmPassword) {\n      alert(\"Password and Confirm Password Are Not Matching kaka\");\n    } else {\n      dispatch(updateUserProfile({\n        userId: user._id,\n        name: name,\n        email: email,\n        password: password,\n        sellerName: sellerName,\n        sellerLogo: sellerLogo,\n        sellerDescription: sellerDescription\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"User Profile\")), loading ? /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 31\n    }\n  }) : error ? /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, error) : /*#__PURE__*/React.createElement(React.Fragment, null, loadingUpdate && /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 39\n    }\n  }), errorUpdate && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, errorUpdate), successUpdate & /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 38\n    }\n  }, \"Profile Updated Succesfully\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"Enter password\",\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"confirmPassword\",\n    type: \"password\",\n    placeholder: \"Enter password\",\n    onChange: function onChange(e) {\n      return setConfirmPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  })), user.isSeller && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, \"Seller\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sellerName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, \"Seller Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"sellerName\",\n    type: \"text\",\n    placeholder: \"Enter Seller Name\",\n    value: sellerName,\n    onChange: function onChange(e) {\n      return setSellerName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sellerLogo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, \"Seller Logo\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"sellerLogo\",\n    type: \"text\",\n    placeholder: \"Enter Seller Logo\",\n    value: sellerLogo,\n    onChange: function onChange(e) {\n      return setSellerLogo(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sellerDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, \"Seller Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"sellerDescription\",\n    type: \"text\",\n    placeholder: \"Enter Seller Description\",\n    value: sellerDescription,\n    onChange: function onChange(e) {\n      return setSellerDescription(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, \"Update\")))));\n}","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUserProfile","LoadingBox","MessageBox","USER_UPDATE_PROFILE_RESET","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","sellerName","setSellerName","sellerLogo","setSellerLogo","sellerDescription","setSellerDescription","userSignin","state","userInfo","userDetails","loading","error","user","userUpdateProfile","successUpdate","success","errorUpdate","loadingUpdate","dispatch","type","_id","seller","logo","description","submitHandler","e","preventDefault","alert","userId","target","value","isSeller"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\n\nexport default function ProfileScreen() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    // seller hooks kaka\n    const [sellerName, setSellerName] = useState('');\n    const [sellerLogo, setSellerLogo] = useState('');\n    const [sellerDescription, setSellerDescription] = useState('');\n\n\n    const userSignin = useSelector((state) => state.userSignin);\n    const {userInfo} = userSignin;\n    const userDetails = useSelector((state) => state.userDetails);\n    const {loading, error, user} = userDetails;\n    \n\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n    const {\n        success: successUpdate, \n        error: errorUpdate, \n        loading: loadingUpdate, \n    } = userUpdateProfile;\n\n    const dispatch = useDispatch();\n\n\n\n    useEffect(() => {\n        if(!user){\n            dispatch({type: USER_UPDATE_PROFILE_RESET});\n            dispatch(detailsUser(userInfo._id));\n        } else {\n            setName(user.name);\n            setEmail(user.email)\n            if (user.seller) {\n                setSellerName(user.seller.name);\n                setSellerLogo(user.seller.logo);\n                setSellerDescription(user.seller.description);\n              }\n        }\n\n    }, [dispatch, userInfo._id, user]);\n\n\n\n    const submitHandler = (e)=>{\n        e.preventDefault();\n\n        // dispatch update profile\n        if (password !== confirmPassword){\n            alert(\"Password and Confirm Password Are Not Matching kaka\")\n        } else {\n            dispatch(updateUserProfile({\n                userId: user._id,\n                name,\n                email,\n                password,\n                sellerName,\n                sellerLogo,\n                sellerDescription,\n            })\n            );\n        }\n    };\n\n\n    return (\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>User Profile</h1>\n                </div>\n\n                {\n                    loading? (<LoadingBox></LoadingBox>)\n                    : \n                    error? (<MessageBox variant=\"danger\">{error}</MessageBox>)\n                    : \n                    <>\n                    {loadingUpdate && <LoadingBox></LoadingBox>}\n                    {errorUpdate && (\n                        <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\n                    )}\n                    {successUpdate &(<MessageBox variant=\"success\">\n                    Profile Updated Succesfully</MessageBox>)}\n                        <div>\n                            <label htmlFor=\"name\">Name</label>\n                            <input \n                            id=\"name\"\n                            type=\"text\"\n                            placeholder=\"Enter name\"\n                            value={name}\n                            onChange={(e) =>setName(e.target.value)}\n                            ></input>\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"email\">Email</label>\n                            <input \n                            id=\"email\"\n                            type=\"email\"\n                            placeholder=\"Enter email\"\n                            value={email}\n                            onChange={(e) =>setEmail(e.target.value)}\n                            ></input>\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"password\">Password</label>\n                            <input \n                            id=\"password\"\n                            type=\"password\"\n                            placeholder=\"Enter password\"\n                            onChange={(e) => setPassword(e.target.value)}\n                            ></input>\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                            <input \n                            id=\"confirmPassword\"\n                            type=\"password\"\n                            placeholder=\"Enter password\"\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                            \n                            ></input>\n                        </div>\n\n                        {user.isSeller && (\n                        <>\n                            <h2>Seller</h2>\n                            <div>\n                            <label htmlFor=\"sellerName\">Seller Name</label>\n                            <input\n                                id=\"sellerName\"\n                                type=\"text\"\n                                placeholder=\"Enter Seller Name\"\n                                value={sellerName}\n                                onChange={(e) => setSellerName(e.target.value)}\n                            ></input>\n                            </div>\n\n                            <div>\n                            <label htmlFor=\"sellerLogo\">Seller Logo</label>\n                            <input\n                                id=\"sellerLogo\"\n                                type=\"text\"\n                                placeholder=\"Enter Seller Logo\"\n                                value={sellerLogo}\n                                onChange={(e) => setSellerLogo(e.target.value)}\n                            ></input>\n                            </div>\n                            \n                            <div>\n                            <label htmlFor=\"sellerDescription\">Seller Description</label>\n                            <input\n                                id=\"sellerDescription\"\n                                type=\"text\"\n                                placeholder=\"Enter Seller Description\"\n                                value={sellerDescription}\n                                onChange={(e) => setSellerDescription(e.target.value)}\n                            ></input>\n                            </div>\n                        </>\n                          )}\n\n                        <div>\n                            <label />\n                            <button className=\"primary\" type=\"submit\">Update</button> \n                        </div>\n                   \n                    </>\n                }\n            </form>\n            \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}