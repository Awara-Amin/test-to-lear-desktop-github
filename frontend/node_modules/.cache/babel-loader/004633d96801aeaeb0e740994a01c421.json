{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_TOPSELLERS_LIST_REQUEST, USER_TOPSELLERS_LIST_SUCCESS, USER_TOPSELLERS_LIST_FAIL, USER_COUPON_REQUEST, USER_COUPON_SUCCESS, USER_COUPON_FAIL } from \"../constants/userConstants\"; // signin function accepts two parameters > email, password\n\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  }); // await Axios.post, we use post bcz signin means creating data\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    }); //                Key            value\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data)); //  this is for keeping the user signin even they may close the browser\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // when we do sign out remove these things for us\n\nexport const signout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"cartItems\");\n  localStorage.removeItem(\"favoriteItems\");\n  localStorage.removeItem(\"shippingAddress\");\n  dispatch({\n    type: USER_SIGNOUT\n  });\n  document.location.href = \"/signin\";\n};\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo === null || userInfo === void 0 ? void 0 : userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/users/profile`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(`userInfo`, JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  dispatch({\n    type: USER_LIST_REQUEST\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"/api/users\", {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    console.log(data);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DELETE_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.delete(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/users/${user._id}`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listTopSellers = () => async dispatch => {\n  dispatch({\n    type: USER_TOPSELLERS_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(\"/api/users/top-sellers\");\n    console.log(data);\n    dispatch({\n      type: USER_TOPSELLERS_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_TOPSELLERS_LIST_FAIL,\n      payload: message\n    });\n  }\n}; //   Apply coupon, here we do request to backend\n// export const applyCoupon = (coupon) => async (dispatch) => {\n//   dispatch({\n//     type: USER_COUPON_REQUEST,\n//     payload: { coupon },\n//   });\n//   try {\n//     const { data } = await Axios.post(\"/api/users/cart/coupon\", {\n//       coupon,\n//     });\n//     dispatch({ type: USER_COUPON_SUCCESS, payload: data });\n//   } catch (error) {\n//     dispatch({\n//       type: USER_COUPON_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// };","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/src/actions/userActions.js"],"names":["Axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_LIST_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_TOPSELLERS_LIST_REQUEST","USER_TOPSELLERS_LIST_SUCCESS","USER_TOPSELLERS_LIST_FAIL","USER_COUPON_REQUEST","USER_COUPON_SUCCESS","USER_COUPON_FAIL","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signout","removeItem","document","location","href","register","name","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token","updateUserProfile","user","put","listUsers","console","log","deleteUser","delete","updateUser","_id","listTopSellers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,oBAHF,EAIEC,kBAJF,EAKEC,qBALF,EAMEC,qBANF,EAOEC,gBAPF,EAQEC,mBARF,EASEC,mBATF,EAUEC,YAVF,EAWEC,wBAXF,EAYEC,2BAZF,EAaEC,2BAbF,EAcEC,cAdF,EAeEC,iBAfF,EAgBEC,iBAhBF,EAiBEC,mBAjBF,EAkBEC,mBAlBF,EAmBEC,gBAnBF,EAoBEC,mBApBF,EAqBEC,mBArBF,EAsBEC,gBAtBF,EAuBEC,4BAvBF,EAwBEC,4BAxBF,EAyBEC,yBAzBF,EA0BEC,mBA1BF,EA2BEC,mBA3BF,EA4BEC,gBA5BF,QA6BO,4BA7BP,C,CA+BA;;AACA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEzB,mBADC;AAEP0B,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAFF,GAAD,CAAR,CAD6D,CAK7D;;AACA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAACoC,IAAN,CAAW,mBAAX,EAAgC;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAhC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAExB,mBAAR;AAA6ByB,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR,CAFE,CAGF;;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC,EAJE,CAIsD;AACzD,GALD,CAKE,OAAOM,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE1B,gBADC;AAEP2B,MAAAA,OAAO,EACLO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CApBM,C,CAsBP;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAOZ,QAAD,IAAc;AACzCK,EAAAA,YAAY,CAACQ,UAAb,CAAwB,UAAxB;AACAR,EAAAA,YAAY,CAACQ,UAAb,CAAwB,WAAxB;AACAR,EAAAA,YAAY,CAACQ,UAAb,CAAwB,eAAxB;AACAR,EAAAA,YAAY,CAACQ,UAAb,CAAwB,iBAAxB;AACAb,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEvB;AAAR,GAAD,CAAR;AACAoC,EAAAA,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,GAAyB,SAAzB;AACD,CAPM;AASP,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOpB,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;AACrEA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAE5B,qBADC;AAEP6B,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAFF,GAAD,CAAR;;AAIA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAACoC,IAAN,CAAW,qBAAX,EAAkC;AACvDc,MAAAA,IADuD;AAEvDpB,MAAAA,KAFuD;AAGvDC,MAAAA;AAHuD,KAAlC,CAAvB;AAKAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE3B,qBAAR;AAA+B4B,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAExB,mBAAR;AAA6ByB,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACD,GATD,CASE,OAAOM,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE7B,kBADC;AAEP8B,MAAAA,OAAO,EACLO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAvBM;AAyBP,OAAO,MAAMQ,WAAW,GAAIC,MAAD,IAAY,OAAOpB,QAAP,EAAiBqB,QAAjB,KAA8B;AACnErB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE/B,oBAAR;AAA8BgC,IAAAA,OAAO,EAAEkB;AAAvC,GAAD,CAAR;AACA,QAAM;AACJE,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFF,QAAQ,EAFZ;;AAIA,MAAI;AACF,UAAM;AAAElB,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAACwD,GAAN,CAAW,cAAaJ,MAAO,EAA/B,EAAkC;AACvDK,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAV,aAAUA,QAAV,uBAAUA,QAAQ,CAAEI,KAAM;AAA3C;AAD8C,KAAlC,CAAvB;AAGA3B,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE9B,oBAAR;AAA8B+B,MAAAA,OAAO,EAAEC;AAAvC,KAAD,CAAR;AACD,GALD,CAKE,OAAOM,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEhC,iBAAR;AAA2BiC,MAAAA,OAAO,EAAES;AAApC,KAAD,CAAR;AACD;AACF,CAlBM;AAoBP,OAAO,MAAMiB,iBAAiB,GAAIC,IAAD,IAAU,OAAO7B,QAAP,EAAiBqB,QAAjB,KAA8B;AACvErB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAErB,2BAAR;AAAqCsB,IAAAA,OAAO,EAAE2B;AAA9C,GAAD,CAAR;AACA,QAAM;AACJP,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFF,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAElB,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAAC8D,GAAN,CAAW,oBAAX,EAAgCD,IAAhC,EAAsC;AAC3DJ,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAA1C;AADkD,KAAtC,CAAvB;AAGA3B,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEpB,2BAAR;AAAqCqB,MAAAA,OAAO,EAAEC;AAA9C,KAAD,CAAR;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAExB,mBAAR;AAA6ByB,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAsB,UAAtB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACD,GAPD,CAOE,OAAOM,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEtB,wBAAR;AAAkCuB,MAAAA,OAAO,EAAES;AAA3C,KAAD,CAAR;AACD;AACF,CAnBM;AAqBP,OAAO,MAAMoB,SAAS,GAAG,MAAM,OAAO/B,QAAP,EAAiBqB,QAAjB,KAA8B;AAC3DrB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAElB;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AACJuC,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AADR,QAEFF,QAAQ,EAFZ;AAGA,UAAM;AAAElB,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAACwD,GAAN,CAAU,YAAV,EAAwB;AAC7CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADjC;AADoC,KAAxB,CAAvB;AAKAK,IAAAA,OAAO,CAACC,GAAR,CAAY9B,IAAZ;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEjB,iBAAR;AAA2BkB,MAAAA,OAAO,EAAEC;AAApC,KAAD,CAAR;AACD,GAXD,CAWE,OAAOM,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEnB,cAAR;AAAwBoB,MAAAA,OAAO,EAAES;AAAjC,KAAD,CAAR;AACD;AACF,CApBM;AAsBP,OAAO,MAAMuB,UAAU,GAAId,MAAD,IAAY,OAAOpB,QAAP,EAAiBqB,QAAjB,KAA8B;AAClErB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEhB,mBAAR;AAA6BiB,IAAAA,OAAO,EAAEkB;AAAtC,GAAD,CAAR;AACA,QAAM;AACJE,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFF,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAElB,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAACmE,MAAN,CAAc,cAAaf,MAAO,EAAlC,EAAqC;AAC1DK,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAA1C;AADiD,KAArC,CAAvB;AAGA3B,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEf,mBAAR;AAA6BgB,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACD,GALD,CAKE,OAAOM,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEd,gBAAR;AAA0Be,MAAAA,OAAO,EAAES;AAAnC,KAAD,CAAR;AACD;AACF,CAjBM;AAmBP,OAAO,MAAMyB,UAAU,GAAIP,IAAD,IAAU,OAAO7B,QAAP,EAAiBqB,QAAjB,KAA8B;AAChErB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEb,mBAAR;AAA6Bc,IAAAA,OAAO,EAAE2B;AAAtC,GAAD,CAAR;AACA,QAAM;AACJP,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFF,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAElB,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAAC8D,GAAN,CAAW,cAAaD,IAAI,CAACQ,GAAI,EAAjC,EAAoCR,IAApC,EAA0C;AAC/DJ,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAA1C;AADsD,KAA1C,CAAvB;AAGA3B,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEZ,mBAAR;AAA6Ba,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACD,GALD,CAKE,OAAOM,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,gBAAR;AAA0BY,MAAAA,OAAO,EAAES;AAAnC,KAAD,CAAR;AACD;AACF,CAjBM;AAmBP,OAAO,MAAM2B,cAAc,GAAG,MAAM,MAAOtC,QAAP,IAAoB;AACtDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEV;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEY,MAAAA;AAAF,QAAW,MAAMnC,KAAK,CAACwD,GAAN,CAAU,wBAAV,CAAvB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY9B,IAAZ;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,4BAAR;AAAsCU,MAAAA,OAAO,EAAEC;AAA/C,KAAD,CAAR;AACD,GAJD,CAIE,OAAOM,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,yBAAR;AAAmCS,MAAAA,OAAO,EAAES;AAA5C,KAAD,CAAR;AACD;AACF,CAbM,C,CAeP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Axios from \"axios\";\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_SIGNIN_FAIL,\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  USER_SIGNOUT,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_TOPSELLERS_LIST_REQUEST,\n  USER_TOPSELLERS_LIST_SUCCESS,\n  USER_TOPSELLERS_LIST_FAIL,\n  USER_COUPON_REQUEST,\n  USER_COUPON_SUCCESS,\n  USER_COUPON_FAIL,\n} from \"../constants/userConstants\";\n\n// signin function accepts two parameters > email, password\nexport const signin = (email, password) => async (dispatch) => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: { email, password },\n  });\n  // await Axios.post, we use post bcz signin means creating data\n  try {\n    const { data } = await Axios.post(\"/api/users/signin\", { email, password });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    //                Key            value\n    localStorage.setItem(\"userInfo\", JSON.stringify(data)); //  this is for keeping the user signin even they may close the browser\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// when we do sign out remove these things for us\nexport const signout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"cartItems\");\n  localStorage.removeItem(\"favoriteItems\");\n  localStorage.removeItem(\"shippingAddress\");\n  dispatch({ type: USER_SIGNOUT });\n  document.location.href = \"/signin\";\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: { email, password },\n  });\n  try {\n    const { data } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password,\n    });\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const detailsUser = (userId) => async (dispatch, getState) => {\n  dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n\n  try {\n    const { data } = await Axios.get(`/api/users/${userId}`, {\n      headers: { Authorization: `Bearer ${userInfo?.token}` },\n    });\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.put(`/api/users/profile`, user, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem(`userInfo`, JSON.stringify(data));\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  dispatch({ type: USER_LIST_REQUEST });\n  try {\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    const { data } = await Axios.get(\"/api/users\", {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n    console.log(data);\n    dispatch({ type: USER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_LIST_FAIL, payload: message });\n  }\n};\n\nexport const deleteUser = (userId) => async (dispatch, getState) => {\n  dispatch({ type: USER_DELETE_REQUEST, payload: userId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.delete(`/api/users/${userId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  dispatch({ type: USER_UPDATE_REQUEST, payload: user });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.put(`/api/users/${user._id}`, user, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_UPDATE_FAIL, payload: message });\n  }\n};\n\nexport const listTopSellers = () => async (dispatch) => {\n  dispatch({ type: USER_TOPSELLERS_LIST_REQUEST });\n  try {\n    const { data } = await Axios.get(\"/api/users/top-sellers\");\n    console.log(data);\n    dispatch({ type: USER_TOPSELLERS_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_TOPSELLERS_LIST_FAIL, payload: message });\n  }\n};\n\n//   Apply coupon, here we do request to backend\n// export const applyCoupon = (coupon) => async (dispatch) => {\n//   dispatch({\n//     type: USER_COUPON_REQUEST,\n//     payload: { coupon },\n//   });\n//   try {\n//     const { data } = await Axios.post(\"/api/users/cart/coupon\", {\n//       coupon,\n//     });\n//     dispatch({ type: USER_COUPON_SUCCESS, payload: data });\n//   } catch (error) {\n//     dispatch({\n//       type: USER_COUPON_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}