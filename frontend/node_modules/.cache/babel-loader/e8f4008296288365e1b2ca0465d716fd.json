{"ast":null,"code":"import _regeneratorRuntime from \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Axios from \"axios\";\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS, CART_ADD_ITEM_FAIL, FAV_REMOVE_ITEM, FAV_ADD_ITEM } from \"../constants/cartConstants\"; // export const addToCart = (productId, qty) => async (dispatch, getState) =>{\n//     const { data } = await Axios.get(`/api/products/${productId}`);\n//     dispatch({\n//         type: CART_ADD_ITEM,\n//         payload: {\n//             name: data.name,\n//             image: data.image,\n//             price: data.price,\n//             countInStock: data.countInStock,\n//             product: data._id,\n//             seller: data.seller,\n//             qty,\n//         },\n//     });\n//     localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n// }\n\nexport var addToCart = function addToCart(productId, qty, size, color) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      var _yield$Axios$get, data, _getState, cartItems;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Axios.get(\"/api/products/\".concat(productId));\n\n            case 2:\n              _yield$Axios$get = _context.sent;\n              data = _yield$Axios$get.data;\n              _getState = getState(), cartItems = _getState.cart.cartItems; // console.log(data.seller._id, cartItems[0].seller);\n              // if(cartItems.length > 0 && data.seller._id !== cartItems[0].seller){\n\n              if (cartItems.length > 0 && data.seller._id !== cartItems[0].seller._id) {\n                dispatch({\n                  type: CART_ADD_ITEM_FAIL,\n                  payload: \"Can not Add to Cart. Buy only from \".concat(cartItems[0].seller.seller.name, \" in this order\")\n                });\n              } else {\n                dispatch({\n                  type: CART_ADD_ITEM,\n                  payload: {\n                    name: data.name,\n                    image: data.image,\n                    price: data.price,\n                    countInStock: data.countInStock,\n                    product: data._id,\n                    seller: data.seller,\n                    qty: qty,\n                    size: size,\n                    color: color\n                  }\n                });\n                localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var removeFromCart = function removeFromCart(productId) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: CART_REMOVE_ITEM,\n      payload: productId\n    });\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n  };\n};\nexport var saveShippingAddress = function saveShippingAddress(data) {\n  return function (dispatch) {\n    dispatch({\n      type: CART_SAVE_SHIPPING_ADDRESS,\n      payload: data\n    });\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\n  };\n};\nexport var savePaymentMethod = function savePaymentMethod(data) {\n  return function (dispatch) {\n    dispatch({\n      type: CART_SAVE_PAYMENT_METHOD,\n      payload: data\n    });\n  };\n};\nexport var addToFavorite = function addToFavorite(productId) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      var _yield$Axios$get2, data, _getState2, favoriteItems;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Axios.get(\"/api/products/\".concat(productId));\n\n            case 2:\n              _yield$Axios$get2 = _context2.sent;\n              data = _yield$Axios$get2.data;\n              _getState2 = getState(), favoriteItems = _getState2.favorite.favoriteItems;\n\n              if (favoriteItems.length > 0) {}\n\n              dispatch({\n                type: FAV_ADD_ITEM,\n                payload: {\n                  name: data.name,\n                  image: data.image,\n                  price: data.price,\n                  countInStock: data.countInStock,\n                  product: data._id,\n                  seller: data.seller\n                }\n              });\n              localStorage.setItem('favoriteItems', JSON.stringify(getState().favorite.favoriteItems));\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var removeFromFavorite = function removeFromFavorite(productId) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: FAV_REMOVE_ITEM,\n      payload: productId\n    });\n    localStorage.setItem('favoriteItems', JSON.stringify(getState().favorite.favoriteItems));\n  };\n};","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/src/actions/cartActions.js"],"names":["Axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_PAYMENT_METHOD","CART_SAVE_SHIPPING_ADDRESS","CART_ADD_ITEM_FAIL","FAV_REMOVE_ITEM","FAV_ADD_ITEM","addToCart","productId","qty","size","color","dispatch","getState","get","data","cartItems","cart","length","seller","_id","type","payload","name","image","price","countInStock","product","localStorage","setItem","JSON","stringify","removeFromCart","saveShippingAddress","savePaymentMethod","addToFavorite","favoriteItems","favorite","removeFromFavorite"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\n\nimport {CART_ADD_ITEM,\n        CART_REMOVE_ITEM,\n\n        CART_SAVE_PAYMENT_METHOD,\n        CART_SAVE_SHIPPING_ADDRESS,\n\n        CART_ADD_ITEM_FAIL,\n        \n        FAV_REMOVE_ITEM,\n        FAV_ADD_ITEM,\n    \n                            } from \"../constants/cartConstants\";\n\n// export const addToCart = (productId, qty) => async (dispatch, getState) =>{\n//     const { data } = await Axios.get(`/api/products/${productId}`);\n//     dispatch({\n//         type: CART_ADD_ITEM,\n//         payload: {\n//             name: data.name,\n//             image: data.image,\n//             price: data.price,\n//             countInStock: data.countInStock,\n//             product: data._id,\n//             seller: data.seller,\n//             qty,\n//         },\n//     });\n//     localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n// }\n\n\nexport const addToCart = (productId, qty, size, color) => async (dispatch, getState) =>{\n    const { data } = await Axios.get(`/api/products/${productId}`);\n    const {cart: {cartItems}} = getState();\n    // console.log(data.seller._id, cartItems[0].seller);\n // if(cartItems.length > 0 && data.seller._id !== cartItems[0].seller){\n    if (cartItems.length > 0 && data.seller._id !== cartItems[0].seller._id){\n        dispatch({\n            type: CART_ADD_ITEM_FAIL,\n            payload: `Can not Add to Cart. Buy only from ${cartItems[0].seller.seller.name} in this order`\n        });\n    } else {\n        dispatch({\n            type: CART_ADD_ITEM,\n            payload: {\n                name: data.name,\n                image: data.image,\n                price: data.price,\n                countInStock: data.countInStock,\n                product: data._id,\n                seller: data.seller,\n                qty,\n                size,\n                color,\n            },\n        });\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n    }  \n}\n\n\nexport const removeFromCart = (productId) => (dispatch, getState) => {\n    dispatch({type: CART_REMOVE_ITEM, payload: productId});\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\n\nexport const saveShippingAddress = (data) => (dispatch) =>{\n    dispatch({type: CART_SAVE_SHIPPING_ADDRESS, payload: data});\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) =>{\n    dispatch({type: CART_SAVE_PAYMENT_METHOD, payload: data});\n}\n\n\n\n\nexport const addToFavorite = (productId) => async (dispatch, getState) => {\n    // const { data } = await Axios.get(`/api/favorite/${productId}`);\n    const { data } = await Axios.get(`/api/products/${productId}`);\n    const {\n      favorite: { favoriteItems },\n    } = getState();\n    if (favoriteItems.length > 0) {\n    }\n    dispatch({\n      type: FAV_ADD_ITEM,\n      payload: {\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        product: data._id,\n        seller: data.seller,\n      },\n    });\n    localStorage.setItem(\n      'favoriteItems',\n      JSON.stringify(getState().favorite.favoriteItems)\n    );\n  };\n\n\nexport const removeFromFavorite = (productId) => (dispatch, getState) => {\n  dispatch({ type: FAV_REMOVE_ITEM, payload: productId });\n  localStorage.setItem(\n    'favoriteItems',\n    JSON.stringify(getState().favorite.favoriteItems)\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}