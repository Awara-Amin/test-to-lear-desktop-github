{"ast":null,"code":"import _regeneratorRuntime from \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Axios from \"axios\";\nimport { CART_EMPTY } from \"../constants/cartConstants\";\nimport { ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_SUCCESS, // ORDER_PAY_REQUEST, \n// ORDER_PAY_SUCCESS,\n// ORDER_PAY_FAIL, \nORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_FAIL, ORDER_LIST_SUCCESS, ORDER_DELETE_REQUEST, ORDER_DELETE_FAIL, ORDER_DELETE_SUCCESS, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_SUMMARY_REQUEST, ORDER_SUMMARY_SUCCESS, ORDER_PENDING_REQUEST, ORDER_PENDING_SUCCESS, ORDER_PENDING_FAIL } from \"../constants/orderConstants\";\nexport var createOrder = function createOrder(order) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      var _getState, userInfo, _yield$Axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: ORDER_CREATE_REQUEST,\n                payload: order\n              });\n              _context.prev = 1;\n              _getState = getState(), userInfo = _getState.userSignin.userInfo;\n              _context.next = 5;\n              return Axios.post('/api/orders', order, {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token)\n                }\n              });\n\n            case 5:\n              _yield$Axios$post = _context.sent;\n              data = _yield$Axios$post.data;\n              dispatch({\n                type: ORDER_CREATE_SUCCESS,\n                payload: data.order\n              });\n              dispatch({\n                type: CART_EMPTY\n              });\n              localStorage.removeItem('cartItems');\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: ORDER_CREATE_FAIL,\n                payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 12]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var detailsOrder = function detailsOrder(orderId) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      var _getState2, userInfo, _yield$Axios$get, data, message;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: ORDER_DETAILS_REQUEST,\n                payload: orderId\n              });\n              _getState2 = getState(), userInfo = _getState2.userSignin.userInfo;\n              _context2.prev = 2;\n              _context2.next = 5;\n              return Axios.get(\"/api/orders/\".concat(orderId), {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token)\n                }\n              });\n\n            case 5:\n              _yield$Axios$get = _context2.sent;\n              data = _yield$Axios$get.data;\n              dispatch({\n                type: ORDER_DETAILS_SUCCESS,\n                payload: data\n              });\n              _context2.next = 14;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](2);\n              message = _context2.t0.response && _context2.t0.response.data.message ? _context2.t0.response.data.message : _context2.t0.message;\n              dispatch({\n                type: ORDER_DETAILS_FAIL,\n                payload: message\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 10]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}; // export const payOrder = (order, paymentResult) => async (\n//     dispatch, \n//     getState) => { \n//         dispatch({ \n//         type:ORDER_PAY_REQUEST, payload: {order, paymentResult}});\n//         const {\n//             userSignin: {userInfo},\n//         } = getState();\n//         try {\n//             const {data} = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n//                 headers:{Authorization: `Bearer ${userInfo.token}`},\n//             });\n//         dispatch({type: ORDER_PAY_SUCCESS, payload:data });\n//         } catch(error){\n//             const message = \n//             error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message;\n//         dispatch({type: ORDER_PAY_FAIL, payload: message});\n//         }\n// };\n\nexport var pendingOrder = function pendingOrder(order, paymentResult) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      var _getState3, userInfo, _Axios$put, data, message;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch({\n                type: ORDER_PENDING_REQUEST,\n                payload: {\n                  order: order,\n                  paymentResult: paymentResult\n                }\n              });\n              _getState3 = getState(), userInfo = _getState3.userSignin.userInfo;\n\n              try {\n                _Axios$put = Axios.put(\"/api/orders/\".concat(order._id, \"/pay\"), paymentResult, {\n                  headers: {\n                    Authorization: \"Bearer \".concat(userInfo.token)\n                  }\n                }), data = _Axios$put.data;\n                dispatch({\n                  type: ORDER_PENDING_SUCCESS,\n                  payload: data\n                });\n              } catch (error) {\n                message = error.response && error.response.data.message ? error.response.data.message : error.message;\n                dispatch({\n                  type: ORDER_PENDING_FAIL,\n                  payload: message\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var listOrderMine = function listOrderMine() {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n      var _getState4, userInfo, _yield$Axios$get2, data, message;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              dispatch({\n                type: ORDER_MINE_LIST_REQUEST\n              });\n              _getState4 = getState(), userInfo = _getState4.userSignin.userInfo;\n              _context4.prev = 2;\n              _context4.next = 5;\n              return Axios.get('/api/orders/mine', {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token)\n                }\n              });\n\n            case 5:\n              _yield$Axios$get2 = _context4.sent;\n              data = _yield$Axios$get2.data;\n              dispatch({\n                type: ORDER_MINE_LIST_SUCCESS,\n                payload: data\n              });\n              _context4.next = 14;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](2);\n              message = _context4.t0.response && _context4.t0.response.data.message ? _context4.t0.response.data.message : _context4.t0.message;\n              dispatch({\n                type: ORDER_MINE_LIST_FAIL,\n                payload: message\n              });\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[2, 10]]);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var listOrders = function listOrders(_ref5) {\n  var _ref5$seller = _ref5.seller,\n      seller = _ref5$seller === void 0 ? '' : _ref5$seller;\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n      var _getState5, userInfo, _yield$Axios$get3, data, message;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              dispatch({\n                type: ORDER_LIST_REQUEST\n              });\n              _getState5 = getState(), userInfo = _getState5.userSignin.userInfo;\n              _context5.prev = 2;\n              _context5.next = 5;\n              return Axios.get(\"/api/orders?seller=\".concat(seller), {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token)\n                }\n              });\n\n            case 5:\n              _yield$Axios$get3 = _context5.sent;\n              data = _yield$Axios$get3.data;\n              dispatch({\n                type: ORDER_LIST_SUCCESS,\n                payload: data\n              });\n              _context5.next = 14;\n              break;\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](2);\n              message = _context5.t0.response && _context5.t0.response.data.message ? _context5.t0.response.data.message : _context5.t0.message;\n              dispatch({\n                type: ORDER_LIST_FAIL,\n                payload: message\n              });\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[2, 10]]);\n    }));\n\n    return function (_x9, _x10) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteOrder = function deleteOrder(orderId) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: ORDER_DELETE_REQUEST,\n      payload: orderId\n    });\n\n    var _getState6 = getState(),\n        userInfo = _getState6.userSignin.userInfo;\n\n    try {\n      var _Axios$delete = Axios.delete(\"/api/orders/\".concat(orderId), {\n        headers: {\n          Authorization: \"Bearer \".concat(userInfo.token)\n        }\n      }),\n          data = _Axios$delete.data;\n\n      dispatch({\n        type: ORDER_DELETE_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      var message = error.response && error.response.data.message ? error.response.data.message : error.message;\n      dispatch({\n        type: ORDER_DELETE_FAIL,\n        payload: message\n      });\n    }\n  };\n}; // export const deliverOrder = (orderId) => async (\n//     dispatch, \n//     getState) => { \n//         dispatch({ \n//         type:ORDER_DELIVER_REQUEST, payload: orderId});\n//         const {\n//             userSignin: {userInfo},\n//         } = getState();\n//         try {\n//             const {data} = Axios.put(`/api/orders/${orderId}/deliver`, {}, {\n//                 headers:{Authorization: `Bearer ${userInfo.token}`},\n//             });\n//         dispatch({type: ORDER_DELIVER_SUCCESS, payload:data });\n//         } catch(error){\n//             const message = \n//             error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message;\n//         dispatch({type: ORDER_DELIVER_FAIL, payload: message});\n//         }\n// };\n\nexport var deliverOrder = function deliverOrder(orderId) {\n  return /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch, getState) {\n      var _getState7, userInfo, _Axios$put2, data, message;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              dispatch({\n                type: ORDER_DELIVER_REQUEST,\n                payload: orderId\n              });\n              _getState7 = getState(), userInfo = _getState7.userSignin.userInfo;\n\n              try {\n                _Axios$put2 = Axios.put(\"/api/orders/\".concat(orderId, \"/deliver\"), {}, {\n                  headers: {\n                    Authorization: \"Bearer \".concat(userInfo.token)\n                  }\n                }), data = _Axios$put2.data;\n                dispatch({\n                  type: ORDER_DELIVER_SUCCESS,\n                  payload: data\n                });\n              } catch (error) {\n                message = error.response && error.response.data.message ? error.response.data.message : error.message;\n                dispatch({\n                  type: ORDER_DELIVER_FAIL,\n                  payload: message\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x11, _x12) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n}; // for dashboard  work\n\nexport var summaryOrder = function summaryOrder() {\n  return /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch, getState) {\n      var _getState8, userInfo, _yield$Axios$get4, data;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              dispatch({\n                type: ORDER_SUMMARY_REQUEST\n              });\n              _getState8 = getState(), userInfo = _getState8.userSignin.userInfo;\n              _context7.prev = 2;\n              _context7.next = 5;\n              return Axios.get('/api/orders/summary', {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token)\n                }\n              });\n\n            case 5:\n              _yield$Axios$get4 = _context7.sent;\n              data = _yield$Axios$get4.data;\n              dispatch({\n                type: ORDER_SUMMARY_SUCCESS,\n                payload: data\n              });\n              _context7.next = 13;\n              break;\n\n            case 10:\n              _context7.prev = 10;\n              _context7.t0 = _context7[\"catch\"](2);\n              dispatch({\n                type: ORDER_CREATE_FAIL,\n                payload: _context7.t0.response && _context7.t0.response.data.message ? _context7.t0.response.data.message : _context7.t0.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[2, 10]]);\n    }));\n\n    return function (_x13, _x14) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_MINE_LIST_FAIL","ORDER_MINE_LIST_REQUEST","ORDER_MINE_LIST_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_FAIL","ORDER_LIST_SUCCESS","ORDER_DELETE_REQUEST","ORDER_DELETE_FAIL","ORDER_DELETE_SUCCESS","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_SUMMARY_REQUEST","ORDER_SUMMARY_SUCCESS","ORDER_PENDING_REQUEST","ORDER_PENDING_SUCCESS","ORDER_PENDING_FAIL","createOrder","order","dispatch","getState","type","payload","userInfo","userSignin","post","headers","Authorization","token","data","localStorage","removeItem","response","message","detailsOrder","orderId","get","pendingOrder","paymentResult","put","_id","error","listOrderMine","listOrders","seller","deleteOrder","delete","deliverOrder","summaryOrder"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport { CART_EMPTY} from \"../constants/cartConstants\";\n\nimport {ORDER_DETAILS_REQUEST, \n        ORDER_DETAILS_SUCCESS, \n        ORDER_DETAILS_FAIL, \n        \n        ORDER_MINE_LIST_FAIL, \n        ORDER_MINE_LIST_REQUEST, \n        ORDER_MINE_LIST_SUCCESS, \n        \n        // ORDER_PAY_REQUEST, \n        // ORDER_PAY_SUCCESS,\n        // ORDER_PAY_FAIL, \n        \n        ORDER_CREATE_FAIL, \n        ORDER_CREATE_REQUEST,\n        ORDER_CREATE_SUCCESS,\n\n        ORDER_LIST_REQUEST,\n        ORDER_LIST_FAIL,\n        ORDER_LIST_SUCCESS,\n\n        ORDER_DELETE_REQUEST,\n        ORDER_DELETE_FAIL,\n        ORDER_DELETE_SUCCESS,\n        \n        ORDER_DELIVER_REQUEST,\n        ORDER_DELIVER_SUCCESS,\n        ORDER_DELIVER_FAIL,\n        ORDER_SUMMARY_REQUEST,\n        ORDER_SUMMARY_SUCCESS,\n\n        ORDER_PENDING_REQUEST,\n        ORDER_PENDING_SUCCESS,\n        ORDER_PENDING_FAIL} from \"../constants/orderConstants\"\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\n    try {\n        const {\n        userSignin: { userInfo },\n        } = getState();\n        const { data } = await Axios.post('/api/orders', order, {\n        headers: {\n            Authorization: `Bearer ${userInfo.token}`,\n        },\n        });\n        dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\n        dispatch({ type: CART_EMPTY });\n        localStorage.removeItem('cartItems');\n    } catch (error) {\n        dispatch({\n        type: ORDER_CREATE_FAIL,\n        payload:\n            error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        });\n    }\n    };\n\nexport const detailsOrder = (orderId) => async (dispatch, getState ) => {\n    dispatch({type: ORDER_DETAILS_REQUEST, payload: orderId});\n    \n    const {userSignin: {userInfo},\n      } = getState();\n\n    try {\n        const {data} = await Axios.get(`/api/orders/${orderId}`, {\n            headers: {Authorization: `Bearer ${userInfo.token}`},\n        });\n        dispatch({type: ORDER_DETAILS_SUCCESS, payload: data});\n\n    } catch (error) {\n        const message = \n        error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({type: ORDER_DETAILS_FAIL, payload: message});\n\n    }\n};\n\n// export const payOrder = (order, paymentResult) => async (\n//     dispatch, \n//     getState) => { \n//         dispatch({ \n//         type:ORDER_PAY_REQUEST, payload: {order, paymentResult}});\n//         const {\n//             userSignin: {userInfo},\n//         } = getState();\n//         try {\n//             const {data} = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n//                 headers:{Authorization: `Bearer ${userInfo.token}`},\n//             });\n//         dispatch({type: ORDER_PAY_SUCCESS, payload:data });\n            \n//         } catch(error){\n//             const message = \n//             error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message;\n//         dispatch({type: ORDER_PAY_FAIL, payload: message});\n//         }\n\n// };\n\n\nexport const pendingOrder = (order, paymentResult) => async (\n    dispatch, \n    getState) => { \n        dispatch({ \n        type:ORDER_PENDING_REQUEST, payload: {order, paymentResult}});\n        const {\n            userSignin: {userInfo},\n        } = getState();\n        try {\n            const {data} = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n                headers:{Authorization: `Bearer ${userInfo.token}`},\n            });\n        dispatch({type: ORDER_PENDING_SUCCESS, payload:data });\n            \n        } catch(error){\n            const message = \n            error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({type: ORDER_PENDING_FAIL, payload: message});\n        }\n\n};\n\nexport const listOrderMine = () => async (dispatch, getState) => {\n    dispatch({type: ORDER_MINE_LIST_REQUEST});\n    const {userSignin: {userInfo},} = getState();\n    try {\n        const {data} = await Axios.get('/api/orders/mine', {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        });\n    dispatch({type: ORDER_MINE_LIST_SUCCESS, payload: data});\n\n    } catch (error) {\n        const message = \n        error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({type: ORDER_MINE_LIST_FAIL, payload: message});\n    }\n};\n\n\nexport const listOrders = ({ seller = '' }) => async (dispatch, getState) => {\n    dispatch({type: ORDER_LIST_REQUEST});\n    const {\n        userSignin: {userInfo},\n    } = getState();\n\n    try {\n        const { data } = await Axios.get(`/api/orders?seller=${seller}`, {\n            headers: {Authorization: `Bearer ${userInfo.token}`}\n        });\n        dispatch({type: ORDER_LIST_SUCCESS, payload: data});\n\n\n    } catch(error) {\n        const message = \n        error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({type: ORDER_LIST_FAIL, payload: message})\n\n    }\n};\n\nexport const deleteOrder =(orderId) =>(dispatch, getState) =>{\n    dispatch({type: ORDER_DELETE_REQUEST, payload: orderId});\n    const {userSignin: {userInfo}} = getState();\n\n    try {\n        const {data} = Axios.delete(`/api/orders/${orderId}`, {\n            headers: {Authorization: `Bearer ${userInfo.token}`}\n        });\n        dispatch({type: ORDER_DELETE_SUCCESS, payload:data})\n\n    }catch (error){\n        const message = \n        error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({type: ORDER_DELETE_FAIL, payload: message})\n\n    }\n};\n\n\n// export const deliverOrder = (orderId) => async (\n//     dispatch, \n//     getState) => { \n//         dispatch({ \n//         type:ORDER_DELIVER_REQUEST, payload: orderId});\n//         const {\n//             userSignin: {userInfo},\n//         } = getState();\n//         try {\n//             const {data} = Axios.put(`/api/orders/${orderId}/deliver`, {}, {\n//                 headers:{Authorization: `Bearer ${userInfo.token}`},\n//             });\n//         dispatch({type: ORDER_DELIVER_SUCCESS, payload:data });\n            \n//         } catch(error){\n//             const message = \n//             error.response && error.response.data.message\n//             ? error.response.data.message\n//             : error.message;\n//         dispatch({type: ORDER_DELIVER_FAIL, payload: message});\n//         }\n\n// };\n\nexport const deliverOrder = (orderId) => async (\n    dispatch, \n    getState) => { \n        dispatch({ \n        type:ORDER_DELIVER_REQUEST, payload: orderId});\n        const {\n            userSignin: {userInfo},\n        } = getState();\n        try {\n            const {data} = Axios.put(`/api/orders/${orderId}/deliver`, {}, {\n                headers:{Authorization: `Bearer ${userInfo.token}`},\n            });\n        dispatch({type: ORDER_DELIVER_SUCCESS, payload:data });\n            \n        } catch(error){\n            const message = \n            error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({type: ORDER_DELIVER_FAIL, payload: message});\n        }\n\n};\n\n// for dashboard  work\nexport const summaryOrder = () => async (dispatch, getState) => {\n    dispatch({ type: ORDER_SUMMARY_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.get('/api/orders/summary', {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: ORDER_SUMMARY_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: ORDER_CREATE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}