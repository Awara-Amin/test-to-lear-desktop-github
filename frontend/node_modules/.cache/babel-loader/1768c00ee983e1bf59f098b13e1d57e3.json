{"ast":null,"code":"import Axios from \"axios\";\nimport { CART_EMPTY, ORDER_CREATE_FAIL, ORDER_CREATE_RESET, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST } from \"../constants/orderConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_RESET,\n    payload: order\n  });\n\n  try {\n    // getState returns the whole store Redux for us! WOW\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n\n  ;\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {} catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/src/actions/orderActions.js"],"names":["Axios","CART_EMPTY","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","payOrder","paymentResult"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport { CART_EMPTY, ORDER_CREATE_FAIL, ORDER_CREATE_RESET, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST } from \"../constants/orderConstants\"\n\nexport const createOrder = (order) => async(dispatch, getState) =>{\n    dispatch({type: ORDER_CREATE_RESET, payload: order});\n    try {\n        // getState returns the whole store Redux for us! WOW\n        const {userSignin: {userInfo}} = getState();\n        const {data} = await Axios.post('/api/orders', order, {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`, \n            },\n        });\n        dispatch({type: ORDER_CREATE_SUCCESS, payload: data.order});\n        dispatch({type: CART_EMPTY});\n        localStorage.removeItem('cartItems');\n\n    } catch(error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: \n            error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        });\n    };\n}\n\nexport const detailsOrder = (orderId) => async (dispatch, getState ) => {\n    dispatch({type: ORDER_DETAILS_REQUEST, payload: orderId});\n    \n    const {userSignin: {userInfo},\n      } = getState();\n\n    try {\n        const {data} = await Axios.get(`/api/orders/${orderId}`, {\n            headers: {Authorization: `Bearer ${userInfo.token}`},\n        });\n        dispatch({type: ORDER_DETAILS_SUCCESS, payload: data});\n\n    } catch(error) {\n        const message = \n        error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({type: ORDER_DETAILS_FAIL, payload: message});\n\n    }\n};\n\nexport const payOrder = (order, paymentResult) => async (\n    dispatch, \n    getState) =>{ dispatch({ \n        type:ORDER_PAY_REQUEST, payload: {order, paymentResult}});\n        const {\n            userSignin: {userInfo},\n        } = getState();\n        try {\n\n        } catch(error){\n            const message = \n        error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({type: ORDER_PAY_FAIL, payload: message});\n        }\n\n};\n\n\n"]},"metadata":{},"sourceType":"module"}