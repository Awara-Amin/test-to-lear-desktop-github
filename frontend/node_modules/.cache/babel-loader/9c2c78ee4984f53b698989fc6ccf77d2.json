{"ast":null,"code":"import Axios from \"axios\";\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS, CART_ADD_ITEM_FAIL, FAV_REMOVE_ITEM, FAV_ADD_ITEM } from \"../constants/cartConstants\"; // export const addToCart = (productId, qty) => async (dispatch, getState) =>{\n//     const { data } = await Axios.get(`/api/products/${productId}`);\n//     dispatch({\n//         type: CART_ADD_ITEM,\n//         payload: {\n//             name: data.name,\n//             image: data.image,\n//             price: data.price,\n//             countInStock: data.countInStock,\n//             product: data._id,\n//             seller: data.seller,\n//             qty,\n//         },\n//     });\n//     localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n// }\n\nexport const addToCart = (productId, qty, size) => async (dispatch, getState) => {\n  const {\n    data\n  } = await Axios.get(`/api/products/${productId}`);\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState(); // console.log(data.seller._id, cartItems[0].seller);\n  // if(cartItems.length > 0 && data.seller._id !== cartItems[0].seller){\n\n  if (cartItems.length > 0 && data.seller._id !== cartItems[0].seller._id) {\n    dispatch({\n      type: CART_ADD_ITEM_FAIL,\n      payload: `Can not Add to Cart. Buy only from ${cartItems[0].seller.seller.name} in this order`\n    });\n  } else {\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        product: data._id,\n        seller: data.seller,\n        qty,\n        size\n      }\n    });\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n  }\n};\nexport const removeFromCart = productId => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: productId\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n};\nexport const addToFavorite = productId => async (dispatch, getState) => {\n  // const { data } = await Axios.get(`/api/favorite/${productId}`);\n  const {\n    data\n  } = await Axios.get(`/api/products/${productId}`);\n  const {\n    favorite: {\n      favoriteItems\n    }\n  } = getState();\n\n  if (favoriteItems.length > 0) {}\n\n  dispatch({\n    type: FAV_ADD_ITEM,\n    payload: {\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      product: data._id,\n      seller: data.seller\n    }\n  });\n  localStorage.setItem('favoriteItems', JSON.stringify(getState().favorite.favoriteItems));\n};\nexport const removeFromFavorite = productId => (dispatch, getState) => {\n  dispatch({\n    type: FAV_REMOVE_ITEM,\n    payload: productId\n  });\n  localStorage.setItem('favoriteItems', JSON.stringify(getState().favorite.favoriteItems));\n};","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/amazona-1/amazona/frontend/src/actions/cartActions.js"],"names":["Axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_PAYMENT_METHOD","CART_SAVE_SHIPPING_ADDRESS","CART_ADD_ITEM_FAIL","FAV_REMOVE_ITEM","FAV_ADD_ITEM","addToCart","productId","qty","size","dispatch","getState","data","get","cart","cartItems","length","seller","_id","type","payload","name","image","price","countInStock","product","localStorage","setItem","JSON","stringify","removeFromCart","saveShippingAddress","savePaymentMethod","addToFavorite","favorite","favoriteItems","removeFromFavorite"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\n\nimport {CART_ADD_ITEM,\n        CART_REMOVE_ITEM,\n\n        CART_SAVE_PAYMENT_METHOD,\n        CART_SAVE_SHIPPING_ADDRESS,\n\n        CART_ADD_ITEM_FAIL,\n        \n        FAV_REMOVE_ITEM,\n        FAV_ADD_ITEM,\n    \n                            } from \"../constants/cartConstants\";\n\n// export const addToCart = (productId, qty) => async (dispatch, getState) =>{\n//     const { data } = await Axios.get(`/api/products/${productId}`);\n//     dispatch({\n//         type: CART_ADD_ITEM,\n//         payload: {\n//             name: data.name,\n//             image: data.image,\n//             price: data.price,\n//             countInStock: data.countInStock,\n//             product: data._id,\n//             seller: data.seller,\n//             qty,\n//         },\n//     });\n//     localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n// }\n\n\nexport const addToCart = (productId, qty, size) => async (dispatch, getState) =>{\n    const { data } = await Axios.get(`/api/products/${productId}`);\n    const {cart: {cartItems}} = getState();\n    // console.log(data.seller._id, cartItems[0].seller);\n // if(cartItems.length > 0 && data.seller._id !== cartItems[0].seller){\n    if (cartItems.length > 0 && data.seller._id !== cartItems[0].seller._id){\n        dispatch({\n            type: CART_ADD_ITEM_FAIL,\n            payload: `Can not Add to Cart. Buy only from ${cartItems[0].seller.seller.name} in this order`\n        });\n    } else {\n        dispatch({\n            type: CART_ADD_ITEM,\n            payload: {\n                name: data.name,\n                image: data.image,\n                price: data.price,\n                countInStock: data.countInStock,\n                product: data._id,\n                seller: data.seller,\n                qty,\n                size,\n            },\n        });\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n    }  \n}\n\n\nexport const removeFromCart = (productId) => (dispatch, getState) => {\n    dispatch({type: CART_REMOVE_ITEM, payload: productId});\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\n\nexport const saveShippingAddress = (data) => (dispatch) =>{\n    dispatch({type: CART_SAVE_SHIPPING_ADDRESS, payload: data});\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) =>{\n    dispatch({type: CART_SAVE_PAYMENT_METHOD, payload: data});\n}\n\n\n\n\nexport const addToFavorite = (productId) => async (dispatch, getState) => {\n    // const { data } = await Axios.get(`/api/favorite/${productId}`);\n    const { data } = await Axios.get(`/api/products/${productId}`);\n    const {\n      favorite: { favoriteItems },\n    } = getState();\n    if (favoriteItems.length > 0) {\n    }\n    dispatch({\n      type: FAV_ADD_ITEM,\n      payload: {\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        product: data._id,\n        seller: data.seller,\n      },\n    });\n    localStorage.setItem(\n      'favoriteItems',\n      JSON.stringify(getState().favorite.favoriteItems)\n    );\n  };\n\n\nexport const removeFromFavorite = (productId) => (dispatch, getState) => {\n  dispatch({ type: FAV_REMOVE_ITEM, payload: productId });\n  localStorage.setItem(\n    'favoriteItems',\n    JSON.stringify(getState().favorite.favoriteItems)\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}