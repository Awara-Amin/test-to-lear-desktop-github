{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction util() {\n  const data = _interopRequireWildcard(require('util'));\n\n  util = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _prettyFormat() {\n  const data = require('pretty-format');\n\n  _prettyFormat = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _interpolation = require('./interpolation');\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== 'object' && typeof obj !== 'function') {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\nconst SUPPORTED_PLACEHOLDERS = /%[sdifjoOp]/g;\nconst PRETTY_PLACEHOLDER = '%p';\nconst INDEX_PLACEHOLDER = '%#';\nconst PLACEHOLDER_PREFIX = '%';\nconst ESCAPED_PLACEHOLDER_PREFIX = /%%/g;\nconst JEST_EACH_PLACEHOLDER_ESCAPE = '@@__JEST_EACH_PLACEHOLDER_ESCAPE__@@';\n\nvar _default = (title, arrayTable) => {\n  if (isTemplates(title, arrayTable)) {\n    return arrayTable.map((template, index) => ({\n      arguments: [template],\n      title: (0, _interpolation.interpolateVariables)(title, template, index).replace(ESCAPED_PLACEHOLDER_PREFIX, PLACEHOLDER_PREFIX)\n    }));\n  }\n\n  return normaliseTable(arrayTable).map((row, index) => ({\n    arguments: row,\n    title: formatTitle(title, row, index)\n  }));\n};\n\nexports.default = _default;\n\nconst isTemplates = (title, arrayTable) => !SUPPORTED_PLACEHOLDERS.test(interpolateEscapedPlaceholders(title)) && !isTable(arrayTable) && arrayTable.every(col => col != null && typeof col === 'object');\n\nconst normaliseTable = table => isTable(table) ? table : table.map(colToRow);\n\nconst isTable = table => table.every(Array.isArray);\n\nconst colToRow = col => [col];\n\nconst formatTitle = (title, row, rowIndex) => row.reduce((formattedTitle, value) => {\n  const [placeholder] = getMatchingPlaceholders(formattedTitle);\n  const normalisedValue = normalisePlaceholderValue(value);\n  if (!placeholder) return formattedTitle;\n  if (placeholder === PRETTY_PLACEHOLDER) return interpolatePrettyPlaceholder(formattedTitle, normalisedValue);\n  return util().format(formattedTitle, normalisedValue);\n}, interpolateTitleIndex(interpolateEscapedPlaceholders(title), rowIndex)).replace(new RegExp(JEST_EACH_PLACEHOLDER_ESCAPE, 'g'), PLACEHOLDER_PREFIX);\n\nconst normalisePlaceholderValue = value => typeof value === 'string' ? value.replace(new RegExp(PLACEHOLDER_PREFIX, 'g'), JEST_EACH_PLACEHOLDER_ESCAPE) : value;\n\nconst getMatchingPlaceholders = title => title.match(SUPPORTED_PLACEHOLDERS) || [];\n\nconst interpolateEscapedPlaceholders = title => title.replace(ESCAPED_PLACEHOLDER_PREFIX, JEST_EACH_PLACEHOLDER_ESCAPE);\n\nconst interpolateTitleIndex = (title, index) => title.replace(INDEX_PLACEHOLDER, index.toString());\n\nconst interpolatePrettyPlaceholder = (title, value) => title.replace(PRETTY_PLACEHOLDER, (0, _prettyFormat().format)(value, {\n  maxDepth: 1,\n  min: true\n}));","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/node_modules/jest-each/build/table/array.js"],"names":["Object","defineProperty","exports","value","default","util","data","_interopRequireWildcard","require","_prettyFormat","_interpolation","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","SUPPORTED_PLACEHOLDERS","PRETTY_PLACEHOLDER","INDEX_PLACEHOLDER","PLACEHOLDER_PREFIX","ESCAPED_PLACEHOLDER_PREFIX","JEST_EACH_PLACEHOLDER_ESCAPE","_default","title","arrayTable","isTemplates","map","template","index","arguments","interpolateVariables","replace","normaliseTable","row","formatTitle","test","interpolateEscapedPlaceholders","isTable","every","col","table","colToRow","Array","isArray","rowIndex","reduce","formattedTitle","placeholder","getMatchingPlaceholders","normalisedValue","normalisePlaceholderValue","interpolatePrettyPlaceholder","format","interpolateTitleIndex","RegExp","match","toString","maxDepth","min"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction util() {\n  const data = _interopRequireWildcard(require('util'));\n\n  util = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _prettyFormat() {\n  const data = require('pretty-format');\n\n  _prettyFormat = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _interpolation = require('./interpolation');\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst SUPPORTED_PLACEHOLDERS = /%[sdifjoOp]/g;\nconst PRETTY_PLACEHOLDER = '%p';\nconst INDEX_PLACEHOLDER = '%#';\nconst PLACEHOLDER_PREFIX = '%';\nconst ESCAPED_PLACEHOLDER_PREFIX = /%%/g;\nconst JEST_EACH_PLACEHOLDER_ESCAPE = '@@__JEST_EACH_PLACEHOLDER_ESCAPE__@@';\n\nvar _default = (title, arrayTable) => {\n  if (isTemplates(title, arrayTable)) {\n    return arrayTable.map((template, index) => ({\n      arguments: [template],\n      title: (0, _interpolation.interpolateVariables)(\n        title,\n        template,\n        index\n      ).replace(ESCAPED_PLACEHOLDER_PREFIX, PLACEHOLDER_PREFIX)\n    }));\n  }\n\n  return normaliseTable(arrayTable).map((row, index) => ({\n    arguments: row,\n    title: formatTitle(title, row, index)\n  }));\n};\n\nexports.default = _default;\n\nconst isTemplates = (title, arrayTable) =>\n  !SUPPORTED_PLACEHOLDERS.test(interpolateEscapedPlaceholders(title)) &&\n  !isTable(arrayTable) &&\n  arrayTable.every(col => col != null && typeof col === 'object');\n\nconst normaliseTable = table => (isTable(table) ? table : table.map(colToRow));\n\nconst isTable = table => table.every(Array.isArray);\n\nconst colToRow = col => [col];\n\nconst formatTitle = (title, row, rowIndex) =>\n  row\n    .reduce((formattedTitle, value) => {\n      const [placeholder] = getMatchingPlaceholders(formattedTitle);\n      const normalisedValue = normalisePlaceholderValue(value);\n      if (!placeholder) return formattedTitle;\n      if (placeholder === PRETTY_PLACEHOLDER)\n        return interpolatePrettyPlaceholder(formattedTitle, normalisedValue);\n      return util().format(formattedTitle, normalisedValue);\n    }, interpolateTitleIndex(interpolateEscapedPlaceholders(title), rowIndex))\n    .replace(new RegExp(JEST_EACH_PLACEHOLDER_ESCAPE, 'g'), PLACEHOLDER_PREFIX);\n\nconst normalisePlaceholderValue = value =>\n  typeof value === 'string'\n    ? value.replace(\n        new RegExp(PLACEHOLDER_PREFIX, 'g'),\n        JEST_EACH_PLACEHOLDER_ESCAPE\n      )\n    : value;\n\nconst getMatchingPlaceholders = title =>\n  title.match(SUPPORTED_PLACEHOLDERS) || [];\n\nconst interpolateEscapedPlaceholders = title =>\n  title.replace(ESCAPED_PLACEHOLDER_PREFIX, JEST_EACH_PLACEHOLDER_ESCAPE);\n\nconst interpolateTitleIndex = (title, index) =>\n  title.replace(INDEX_PLACEHOLDER, index.toString());\n\nconst interpolatePrettyPlaceholder = (title, value) =>\n  title.replace(\n    PRETTY_PLACEHOLDER,\n    (0, _prettyFormat().format)(value, {\n      maxDepth: 1,\n      min: true\n    })\n  );\n"]},"metadata":{},"sourceType":"script"}