{"ast":null,"code":"import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers'; // import { orderCreateReducer } from './reducers/orderReducers';\n\nimport { orderCreateReducer, orderDeleteReducer, orderDeliverReducer, orderDetailsReducer, orderListReducer, orderMineListReducer, orderPayReducer, orderSummaryReducer } from './reducers/orderReducers';\nimport { productCategoryListReducer, productCreateReducer, productDeleteReducer, productDetailsReducer, productListReducer, productUpdateReducer, productReviewCreateReducer } from './reducers/productReducers';\nimport { userAddressMapReducer, userDeleteReducer, userDetailReducer, userListReducer, userRegisterReducer, userSigninReducer, userTopSellerListReducer, userUpdateProfileReducer, userUpdateReducer } from './reducers/userReducers';\nconst initialState = {\n  // intial states \n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  },\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'PayPal'\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMineList: orderMineListReducer,\n  userDetails: userDetailReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  orderList: orderListReducer,\n  productDelete: productDeleteReducer,\n  orderDelete: orderDeleteReducer,\n  orderDeliver: orderDeliverReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userTopSellersList: userTopSellerListReducer,\n  productCategoryList: productCategoryListReducer,\n  productReviewCreate: productReviewCreateReducer,\n  userAddressMap: userAddressMapReducer,\n  orderSummary: orderSummaryReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/src/store.js"],"names":["createStore","compose","applyMiddleware","combineReducers","thunk","cartReducer","orderCreateReducer","orderDeleteReducer","orderDeliverReducer","orderDetailsReducer","orderListReducer","orderMineListReducer","orderPayReducer","orderSummaryReducer","productCategoryListReducer","productCreateReducer","productDeleteReducer","productDetailsReducer","productListReducer","productUpdateReducer","productReviewCreateReducer","userAddressMapReducer","userDeleteReducer","userDetailReducer","userListReducer","userRegisterReducer","userSigninReducer","userTopSellerListReducer","userUpdateProfileReducer","userUpdateReducer","initialState","userSignin","userInfo","localStorage","getItem","JSON","parse","cart","cartItems","shippingAddress","paymentMethod","reducer","productList","productDetails","userRegister","orderCreate","orderDetails","orderPay","orderMineList","userDetails","userUpdateProfile","productCreate","productUpdate","orderList","productDelete","orderDelete","orderDeliver","userList","userDelete","userUpdate","userTopSellersList","productCategoryList","productReviewCreate","userAddressMap","orderSummary","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"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","sourcesContent":["import {createStore, compose, applyMiddleware, combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\n// import { orderCreateReducer } from './reducers/orderReducers';\nimport {orderCreateReducer, \n        orderDeleteReducer, \n        orderDeliverReducer, \n        orderDetailsReducer, \n        orderListReducer, \n        orderMineListReducer, \n        orderPayReducer,\n        \n        orderSummaryReducer} from './reducers/orderReducers'\n\nimport { productCategoryListReducer, productCreateReducer, productDeleteReducer, productDetailsReducer,\n         productListReducer, \n         productUpdateReducer,\n         productReviewCreateReducer, } from './reducers/productReducers';\n\nimport { userAddressMapReducer, userDeleteReducer, userDetailReducer, \n         userListReducer, \n         userRegisterReducer, \n         userSigninReducer, \n         userTopSellerListReducer, \n         userUpdateProfileReducer, \n         userUpdateReducer} from './reducers/userReducers';\n\n\nconst initialState = {\n    // intial states \n    userSignin: {\n        userInfo: localStorage.getItem ('userInfo')\n        ? JSON.parse(localStorage.getItem ('userInfo'))\n        : null,    \n    },\n    cart: {\n        cartItems: localStorage.getItem('cartItems')\n        ? JSON.parse(localStorage.getItem('cartItems')):\n        [],\n        shippingAddress: localStorage.getItem('shippingAddress')\n        ? JSON.parse(localStorage.getItem ('shippingAddress'))\n        : \n        {},\n        paymentMethod: 'PayPal',\n    }, \n};\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userSignin: userSigninReducer,\n    userRegister:userRegisterReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderMineList:orderMineListReducer,\n    userDetails: userDetailReducer,\n    userUpdateProfile:userUpdateProfileReducer,\n\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    orderList: orderListReducer,\n    productDelete: productDeleteReducer,\n    orderDelete: orderDeleteReducer,\n    orderDeliver: orderDeliverReducer,\n\n    userList: userListReducer,\n    userDelete:userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    userTopSellersList: userTopSellerListReducer,\n    productCategoryList: productCategoryListReducer,\n\n    productReviewCreate: productReviewCreateReducer,\n\n    userAddressMap: userAddressMapReducer,\n\n    orderSummary: orderSummaryReducer,\n\n\n    \n\n\n\n\n\n\n\n\n})\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk))\n)\n\nexport default store;"]},"metadata":{},"sourceType":"module"}