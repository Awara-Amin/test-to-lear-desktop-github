{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS } from \"../constants/userConstants\";\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/users/profile`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(`userInfo`, JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  dispatch({\n    type: USER_LIST_REQUEST\n  });\n\n  try {\n    const {\n      uerSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.put(`/api/users`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    console.log(data);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/src/actions/userActions.js"],"names":["Axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_LIST_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signout","removeItem","register","name","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token","updateUserProfile","user","put","listUsers","uerSignin","console","log"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport { USER_DETAILS_FAIL,\n         USER_DETAILS_REQUEST, \n         USER_DETAILS_SUCCESS,\n\n         USER_REGISTER_FAIL, \n         USER_REGISTER_REQUEST, \n         USER_REGISTER_SUCCESS,\n\n         USER_SIGNIN_FAIL, \n         USER_SIGNIN_REQUEST, \n         USER_SIGNIN_SUCCESS,\n\n         USER_SIGNOUT,\n\n         USER_UPDATE_PROFILE_FAIL, \n         USER_UPDATE_PROFILE_REQUEST, \n         USER_UPDATE_PROFILE_SUCCESS,\n\n         USER_LIST_FAIL,\n         USER_LIST_REQUEST,\n         USER_LIST_SUCCESS,\n        \n        } from \"../constants/userConstants\";\n\nexport const signin = (email, password) =>async (dispatch) =>{\n    dispatch({\n        type: USER_SIGNIN_REQUEST, payload: {email, password}});\n    try {\n        const {data} = await Axios.post('/api/users/signin', {email, password});\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch(error) {\n        dispatch({\n            type: USER_SIGNIN_FAIL,\n            payload:\n            error.response && error.response.data.message\n            ? error.response.data.message \n            : error.message\n        });\n    }\n};\n\nexport const signout = () => (dispatch) =>{\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('cartItems');\n    localStorage.removeItem('shippingAddress')\n    dispatch({type: USER_SIGNOUT});\n}\n\n\nexport const register = (name, email, password) =>async (dispatch) =>{\n    dispatch({\n        type: USER_REGISTER_REQUEST, payload:{email, password}});\n    try {\n        const {data} = await Axios.post('/api/users/register', {name, email, password});\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch(error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n            error.response && error.response.data.message\n            ? error.response.data.message \n            : error.message\n        });\n    }\n};\n\n\nexport const detailsUser = (userId) => async (dispatch, getState) => {\n    dispatch({type: USER_DETAILS_REQUEST, payload: userId});\n    const {userSignin: {userInfo},\n    } = getState();\n\n    try {\n        const {data} = await Axios.get(`/api/users/${userId}`, {\n            headers: {Authorization: `Bearer ${userInfo.token}`},\n        });\n    dispatch({type: USER_DETAILS_SUCCESS, payload: data});\n\n    } catch(error){\n        const message = \n        error.response && error.response.data.message\n        ? error.response.data.message \n        : error.message;\n        dispatch({type: USER_DETAILS_FAIL, payload: message})\n    }\n\n};\n\nexport const updateUserProfile = (user) =>async (dispatch, getState) => {\n    dispatch({ type:USER_UPDATE_PROFILE_REQUEST, payload: user});\n    const{\n        userSignin: {userInfo},\n    } = getState();\n    try {\n        const {data} = await Axios.put(`/api/users/profile`, user, {\n            headers: {Authorization: `Bearer ${userInfo.token}`},\n        });\n    dispatch({type: USER_UPDATE_PROFILE_SUCCESS, payload:data});\n    dispatch({type: USER_SIGNIN_SUCCESS, payload:data});\n    localStorage.setItem(`userInfo`, JSON.stringify(data));\n\n    } catch(error){\n        const message = error.response && error.response.data.message\n        ? error.response.data.message \n        : error.message;\n        dispatch({type: USER_UPDATE_PROFILE_FAIL, payload: message});\n    }   \n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n    dispatch({type: USER_LIST_REQUEST})\n    try {\n        const {uerSignin: {userInfo},\n    } = getState();\n\n        const {data} = await Axios.put(`/api/users`, {\n            headers: {Authorization: `Bearer ${userInfo.token}`\n        } \n       }\n        );\n        console.log(data)\n        dispatch({type: USER_LIST_SUCCESS, payload: data});\n\n    } catch(error){\n        const message = error.response && error.response.data.message\n        ? error.response.data.message \n        : error.message;\n        dispatch({type: USER_LIST_FAIL, payload: message});\n\n    }\n};\n\n\n"]},"metadata":{},"sourceType":"module"}