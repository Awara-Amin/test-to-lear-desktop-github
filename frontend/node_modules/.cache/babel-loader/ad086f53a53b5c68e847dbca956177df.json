{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/userConstants\";\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/src/actions/userActions.js"],"names":["Axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signout","removeItem","register","name","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/userConstants\";\n\nexport const signin = (email, password) =>async (dispatch) =>{\n    dispatch({\n        type: USER_SIGNIN_REQUEST, payload:{email, password}});\n    try {\n        const {data} = await Axios.post('/api/users/signin', {email, password});\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch(error) {\n        dispatch({\n            type: USER_SIGNIN_FAIL,\n            payload:\n            error.response && error.response.data.message\n            ? error.response.data.message : error.message\n        });\n    }\n};\n\nexport const signout = () => (dispatch) =>{\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('cartItems');\n    localStorage.removeItem('shippingAddress')\n    dispatch({type: USER_SIGNOUT});\n}\n\n\nexport const register = (name, email, password) =>async (dispatch) =>{\n    dispatch({\n        type: USER_REGISTER_REQUEST, payload:{email, password}});\n    try {\n        const {data} = await Axios.post('/api/users/register', {name, email, password});\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch(error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n            error.response && error.response.data.message\n            ? error.response.data.message : error.message\n        });\n    }\n};\n\n\nexport const detailsUser = (userId) => async(dispatch, getState) =>{\n    dispatch({type: USER_DETAILS_REQUEST, payload:userId});\n    const {userSignin:{userInfo}} = getState();\n\n    try {\n        const {data} = Axios.get(`/api/users/${userId}`, {\n            headers: {Authorization: `Bearer ${userInfo.token}`},\n        });\n    dispatch({type: USER_DETAILS_REQUEST, payload: data});\n\n\n    } catch(error){\n        const message = error.response && error.response.data.message\n        ? error.response.data.message \n        : error.message;\n        dispatch({type: USER_DETAILS_FAIL, payload: message})\n    }\n\n};\n"]},"metadata":{},"sourceType":"module"}