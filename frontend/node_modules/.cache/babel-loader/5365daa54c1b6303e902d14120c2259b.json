{"ast":null,"code":"import Axios from \"axios\";\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS } from \"../constants/productConstants\"; //    before adding seller part\n// export const listProducts = () => async (dispatch) => {\n//     dispatch({\n//         type: PRODUCT_LIST_REQUEST,\n//     });\n//     try {\n//         const {data} = await Axios.get('/api/products');\n//         dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n//     } catch (error){\n//         dispatch({type: PRODUCT_LIST_FAIL, payload: error.message});\n//     }\n// };\n// export const listProducts = ({ seller = '' }) => async (dispatch) => {\n//     dispatch({\n//         type: PRODUCT_LIST_REQUEST,\n//     });\n//     try {\n//         const { data } = await Axios.get(`/api/products?seller=${seller}`);\n//         dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n//     } catch (error){\n//         dispatch({type: PRODUCT_LIST_FAIL, payload: error.message});\n//     }\n// };\n\nexport const listProducts = _ref => {\n  let {\n    seller = '',\n    name = ''\n  } = _ref;\n  return async dispatch => {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n\n    try {\n      const {\n        data\n      } = await Axios.get(`/api/products?seller=${seller}&name=${name}`);\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const listProductCategories = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n  console.log(userInfo);\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","listProducts","seller","name","dispatch","type","data","get","payload","error","message","listProductCategories","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","console","log","post","headers","Authorization","token","product","updateProduct","put","_id","deleteProduct","delete"],"mappings":"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","sourcesContent":["\nimport Axios  from \"axios\";\nimport {PRODUCT_CREATE_FAIL, \n        PRODUCT_CREATE_REQUEST, \n        PRODUCT_CREATE_SUCCESS,\n\n       PRODUCT_DETAILS_FAIL,\n        PRODUCT_DETAILS_REQUEST,\n        PRODUCT_DETAILS_SUCCESS,\n        \n        PRODUCT_LIST_FAIL, \n        PRODUCT_LIST_REQUEST, \n        PRODUCT_LIST_SUCCESS,\n\n        PRODUCT_UPDATE_FAIL,\n        PRODUCT_UPDATE_REQUEST,\n        PRODUCT_UPDATE_SUCCESS,\n\n        PRODUCT_DELETE_FAIL, \n       PRODUCT_DELETE_REQUEST,\n       PRODUCT_DELETE_SUCCESS, \n                             } from \"../constants/productConstants\";\n\n//    before adding seller part\n// export const listProducts = () => async (dispatch) => {\n//     dispatch({\n//         type: PRODUCT_LIST_REQUEST,\n//     });\n//     try {\n//         const {data} = await Axios.get('/api/products');\n//         dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n\n//     } catch (error){\n//         dispatch({type: PRODUCT_LIST_FAIL, payload: error.message});\n\n//     }\n// };\n\n// export const listProducts = ({ seller = '' }) => async (dispatch) => {\n//     dispatch({\n//         type: PRODUCT_LIST_REQUEST,\n//     });\n//     try {\n//         const { data } = await Axios.get(`/api/products?seller=${seller}`);\n//         dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n\n//     } catch (error){\n//         dispatch({type: PRODUCT_LIST_FAIL, payload: error.message});\n\n//     }\n// };\n\nexport const listProducts = ({ seller = '', name = '' }) => async (dispatch) => {\n    dispatch({\n        type: PRODUCT_LIST_REQUEST,\n    });\n    try {\n        const { data } = await Axios.get(\n            `/api/products?seller=${seller}&name=${name}`\n          );\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n\n    } catch (error){\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.message});\n\n    }\n};\n\nexport const listProductCategories = () => async (dispatch) => {\n    dispatch({\n        type: PRODUCT_LIST_REQUEST,\n    });\n    try {\n        const { data } = await Axios.get(\n            `/api/products`\n          );\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n\n    } catch (error){\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.message});\n\n    }\n};\n\nexport const detailsProduct = (productId) => async (dispatch) =>{\n    dispatch({type: PRODUCT_DETAILS_REQUEST, payload:productId});\n    try {\n        const {data} = await Axios.get(`/api/products/${productId}`);\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\n\n    } catch(error) {\n        dispatch({type: PRODUCT_DETAILS_FAIL, \n            payload: \n            error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n        });\n    }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n    dispatch({type: PRODUCT_CREATE_REQUEST});\n    const {userSignin:{userInfo}} = getState();\n    console.log(userInfo);\n    try {\n        const {data} = await Axios.post('/api/products', {}, {\n            headers: { Authorization: `Bearer ${userInfo.token}`},\n        }\n        );\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS, \n            payload: data.product,\n        });\n\n\n    } catch(error){\n        const message = error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n        dispatch({type: PRODUCT_CREATE_FAIL, payload:message});\n\n    }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => { \n    dispatch ({type: PRODUCT_UPDATE_REQUEST, payload: product});\n    const {userSignin: {userInfo}} = getState();\n\n    try {\n        const { data } = await Axios.put(`/api/products/${product._id}`, product, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n          });\n        dispatch({type: PRODUCT_UPDATE_SUCCESS, payload: data});\n\n    } catch(error) {\n        const message = error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n        dispatch({type: PRODUCT_UPDATE_FAIL, payload:message});\n                  }\n\n};\n\n\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\n    dispatch({type: PRODUCT_DELETE_REQUEST, payload:productId});\n    const {\n        userSignin: {userInfo}} = getState();\n\n    try {\n        const {data} = Axios.delete(`/api/products/${productId}`, {\n            headers: {Authorization: `Bearer ${userInfo.token}`},\n        });\n        dispatch({type:PRODUCT_DELETE_SUCCESS});\n\n\n    } catch(error){\n        const message = error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n        dispatch({type:PRODUCT_DELETE_FAIL, payload:message})\n\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}