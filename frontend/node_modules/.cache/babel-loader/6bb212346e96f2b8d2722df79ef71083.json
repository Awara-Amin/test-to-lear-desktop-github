{"ast":null,"code":"var _jsxFileName = \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/src/screens/ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { detailsProduct, updateProduct } from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProductEditScreen(props) {\n  _s();\n\n  const productId = props.match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [brand, setBrand] = useState('');\n  const [description, setDescription] = useState('');\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // if (!product.name){\n    if (!product || product._id !== productId) {\n      dispatch(detailsProduct(productId));\n    } else {\n      setName(product.name);\n      setPrice(product.price);\n      setImage(product.image);\n      setCategory(product.category);\n      setCountInStock(product.countInStock);\n      setBrand(product.brand);\n      setDescription(product.description);\n    }\n  }, [product, dispatch, productId]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // todo: dispatch update product\n\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      category,\n      brand,\n      countInStock,\n      description\n    }));\n  }; // UI part\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Edit Product \", productId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"price\",\n            type: \"text\",\n            placeholder: \"Enter Price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"image\",\n            type: \"text\",\n            placeholder: \"Image\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"category\",\n            type: \"text\",\n            placeholder: \"Enter category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"brand\",\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"brand\",\n            type: \"text\",\n            placeholder: \"Enter Brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"countInStock\",\n            children: \"Count In Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"countInStock\",\n            type: \"text\",\n            placeholder: \"Enter countInStock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            rows: \"3\",\n            type: \"text\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductEditScreen, \"mIETCam0wL+Xtnq3qWJLshCPJKA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/src/screens/ProductEditScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","detailsProduct","updateProduct","LoadingBox","MessageBox","ProductEditScreen","props","productId","match","params","id","name","setName","price","setPrice","image","setImage","category","setCategory","countInStock","setCountInStock","brand","setBrand","description","setDescription","productDetails","state","loading","error","product","dispatch","_id","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {useSelector } from 'react-redux';\nimport {detailsProduct, updateProduct} from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\nexport default function ProductEditScreen(props) {\n    const productId = props.match.params.id;\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [image, setImage] = useState('');\n    const [category, setCategory] = useState('');\n    const [countInStock, setCountInStock] = useState('');\n    const [brand, setBrand] = useState('');\n    const [description, setDescription] = useState('');\n\n    const productDetails = useSelector(state => state.productDetails);\n    const {loading, error, product} = productDetails;\n\n    \n\n\n    const dispatch = useDispatch();\n\n     useEffect(() => {\n        // if (!product.name){\n         if (!product || (product._id !== productId)){\n             dispatch(detailsProduct(productId));\n         } else {\n             setName(product.name);\n             setPrice(product.price);\n             setImage(product.image);\n             setCategory(product.category);\n             setCountInStock(product.countInStock);\n             setBrand(product.brand);\n             setDescription(product.description);\n             \n         }\n    }, [product, dispatch, productId]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        // todo: dispatch update product\n        dispatch(\n            updateProduct({\n                _id: productId, \n                name, \n                price,\n                category, \n                brand, \n                countInStock, \n                description,\n            })\n        );\n    }\n\n\n    // UI part\n    return (\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>Edit Product {productId}</h1>\n                </div>\n                \n                    {loading? \n                    <LoadingBox></LoadingBox>\n                    : \n                    error ? <MessageBox variant='danger'>{error}</MessageBox>\n                    : \n                    <>\n                    <div>\n                        <label htmlFor=\"name\">Name</label>\n                        <input \n                        id=\"name\"\n                        type=\"text\"\n                        placeholder=\"Enter Name\"\n                        value={name}\n                        onChange={(e) =>setName(e.target.value)}\n                        ></input>\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"price\">Price</label>\n                        <input \n                        id=\"price\"\n                        type=\"text\"\n                        placeholder=\"Enter Price\"\n                        value={price}\n                        onChange={(e) =>setPrice(e.target.value)}\n                        ></input>\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"image\">Image</label>\n                        <input \n                        id=\"image\"\n                        type=\"text\"\n                        placeholder=\"Image\"\n                        value={image}\n                        onChange={(e) =>setImage(e.target.value)}\n                        ></input>\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"category\">Category</label>\n                        <input \n                        id=\"category\"\n                        type=\"text\"\n                        placeholder=\"Enter category\"\n                        value={category}\n                        onChange={(e) =>setCategory(e.target.value)}\n                        ></input>\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"brand\">Brand</label>\n                        <input \n                        id=\"brand\"\n                        type=\"text\"\n                        placeholder=\"Enter Brand\"\n                        value={brand}\n                        onChange={(e) =>setBrand(e.target.value)}\n                        ></input>\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"countInStock\">Count In Stock</label>\n                        <input \n                        id=\"countInStock\"\n                        type=\"text\"\n                        placeholder=\"Enter countInStock\"\n                        value={countInStock}\n                        onChange={(e) =>setCountInStock(e.target.value)}\n                        ></input>\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"description\">Description</label>\n                        <textarea \n                        id=\"description\"\n                        rows=\"3\"\n                        type=\"text\"\n                        placeholder=\"Enter description\"\n                        value={description}\n                        onChange={(e) =>setDescription(e.target.value)}\n                        ></textarea>\n                    </div>\n\n                    <div>\n                        <label></label>\n                        <button className=\"primary\" type=\"submit\">\n                            Update\n                        </button>\n\n                    </div>\n\n                    </>\n                    \n                }\n\n                \n            </form>\n            \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}