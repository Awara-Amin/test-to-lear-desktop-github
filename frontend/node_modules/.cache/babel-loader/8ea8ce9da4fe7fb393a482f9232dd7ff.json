{"ast":null,"code":"var _jsxFileName = \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/src/screens/UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingBox from '../components/LoadingBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserEditScreen(props) {\n  _s();\n\n  console.log(props);\n  const userId = props.match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isSeller, setIsSeller] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!user.name) {\n      dispatch(detailsUser(userId));\n    }\n  }, [dispatch, user, userId]);\n\n  const submitHandler = e => {\n    e.preventDefault(); //  dispatch update user\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Edit User \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"isSeller\",\n            children: \"Is Seller\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"isSeller\",\n            type: \"checkbox\",\n            checked: isSeller,\n            onChange: e => setIsSeller(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"isAdmin\",\n            children: \"Is Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"isAdmin\",\n            type: \"checkbox\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n\n_s(UserEditScreen, \"cRB57dZBRfubX0ejbAyyDt57jDI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","LoadingBox","UserEditScreen","props","console","log","userId","match","params","id","name","setName","email","setEmail","isSeller","setIsSeller","isAdmin","setIsAdmin","userDetails","state","loading","error","user","dispatch","detailsUser","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":[" import React,{useState, useEffect} from 'react';\n import {useDispatch, useSelector} from 'react-redux';\nimport LoadingBox from '../components/LoadingBox'\n \n export default function UserEditScreen(props) {\n     console.log(props)\n     const userId = props.match.params.id;\n\n\n     const [name, setName] = useState('');\n     const [email, setEmail] = useState('');\n     const [isSeller, setIsSeller] = useState(false);\n     const [isAdmin, setIsAdmin] = useState(false);\n\n     const userDetails = useSelector(state => state.userDetails);\n     const {loading, error, user} = userDetails;\n\n     const dispatch = useDispatch();\n\n\n     useEffect(() => {\n         if(!user.name) {\n             dispatch(detailsUser(userId));\n         }\n     },[dispatch, user, userId])\n\n\n\n     const submitHandler = (e) => {\n         e.preventDefault();\n        //  dispatch update user\n     }\n\n     return (\n         <div>\n             <form className=\"form\" onSubmit={submitHandler}>\n                 <div>\n                 <h1>Edit User {name}</h1>\n                 </div>\n                 {loading ? <LoadingBox></LoadingBox>\n                 : \n                 error ? <MessageBox variant=\"danger\">{error}</MessageBox>\n                 : \n                 <>\n                 <div>\n                     <label htmlFor=\"name\">Name</label>\n                     <input \n                     id=\"name\"\n                     type=\"text\"\n                     placeholder=\"Enter Name\"\n                     value={name}\n                     onChange={(e) => setName(e.target.value)}\n                     ></input>\n                 </div>\n\n                 <div>\n                     <label htmlFor=\"email\">Email</label>\n                     <input \n                     id=\"email\"\n                     type=\"email\"\n                     placeholder=\"Enter Email\"\n                     value={email}\n                     onChange={(e) => setEmail(e.target.value)}\n                     ></input>\n                 </div>\n\n                 <div>\n                     <label htmlFor=\"isSeller\">Is Seller</label>\n                     <input \n                     id=\"isSeller\"\n                     type=\"checkbox\"\n                     checked={isSeller}\n                     onChange={(e) => setIsSeller(e.target.checked)}\n                     ></input>\n                 </div>\n\n\n                 <div>\n                     <label htmlFor=\"isAdmin\">Is Admin</label>\n                     <input \n                     id=\"isAdmin\"\n                     type=\"checkbox\"\n                     checked={isAdmin}\n                     onChange={(e) => setIsAdmin(e.target.checked)}\n                     ></input>\n                 </div>\n\n                 <div>\n                     <button type=\"submit\" className=\"primary\">\n                         Update\n                    </button>\n                 </div>\n\n                 </>\n                 \n                }\n                 \n             </form>\n             \n         </div>\n     )\n }\n "]},"metadata":{},"sourceType":"module"}