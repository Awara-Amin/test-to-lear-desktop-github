{"ast":null,"code":"var _jsxFileName = \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/src/screens/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileScreen() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!user) {\n      dispatch(detailsUser(userInfo._id));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n    }\n  }, [dispatch, userInfo._id, user]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // dispatch update profile\n\n    if (password !== confirmPassword) {\n      alert(\"Password and Confirm Password Are Not Matching kaka\");\n    } else {\n      dispatch(updateUserProfile({\n        userId: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 30\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Enter password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"confirmPassword\",\n            type: \"password\",\n            placeholder: \"Enter password\",\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            classname: \"primary\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileScreen, \"53mTVj+E3zLd9dnOQr8oLiu/Nos=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUserProfile","LoadingBox","MessageBox","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","userSignin","state","userInfo","userDetails","loading","error","user","dispatch","_id","submitHandler","e","preventDefault","alert","userId","target","value"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\nexport default function ProfileScreen() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const userSignin = useSelector((state) => state.userSignin);\n    const {userInfo} = userSignin;\n    const userDetails = useSelector((state) => state.userDetails);\n    const {loading, error, user} = userDetails;\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(!user){\n            dispatch(detailsUser(userInfo._id));\n        } else {\n            setName(user.name);\n            setEmail(user.email)\n        }\n\n    }, [dispatch, userInfo._id, user]);\n\n    const submitHandler = (e)=>{\n        e.preventDefault();\n\n        // dispatch update profile\n        if(password !== confirmPassword){\n            alert(\"Password and Confirm Password Are Not Matching kaka\")\n        } else{\n            dispatch(updateUserProfile({userId: user._id, name, email, password}));\n        }\n    };\n\n\n    return (\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <div>\n                    <h1>User Profile</h1>\n                </div>\n\n                {\n                    loading? <LoadingBox></LoadingBox>\n                    : \n                    error? <MessageBox variant=\"danger\">{error}</MessageBox>\n                    : \n                    <>\n                        <div>\n                            <label htmlFor=\"name\">Name</label>\n                            <input \n                            id=\"name\"\n                            type=\"text\"\n                            placeholder=\"Enter name\"\n                            value={name}\n                            onChange={(e) =>setName(e.target.value)}\n                            ></input>\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"email\">Email</label>\n                            <input \n                            id=\"email\"\n                            type=\"email\"\n                            placeholder=\"Enter email\"\n                            value={email}\n                            onChange={(e) =>setEmail(e.target.value)}\n                            ></input>\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"password\">Password</label>\n                            <input \n                            id=\"password\"\n                            type=\"password\"\n                            placeholder=\"Enter password\"\n                            onChange={(e) => setPassword(e.target.value)}\n                            ></input>\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                            <input \n                            id=\"confirmPassword\"\n                            type=\"password\"\n                            placeholder=\"Enter password\"\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                            \n                            ></input>\n                        </div>\n\n                        <div>\n                            <label />\n                            <button classname=\"primary\" type=\"submit\">Update</button> \n                        </div>\n                   \n                    </>\n                }\n            </form>\n            \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}