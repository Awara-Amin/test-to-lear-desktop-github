{"ast":null,"code":"import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers'; // import { orderCreateReducer } from './reducers/orderReducers';\n\nimport { orderCreateReducer, orderDetailsReducer, orderListReducer, orderMineListReducer, orderPayReducer } from './reducers/orderReducers';\nimport { productCreateReducer, productDetailsReducer, productListReducer, productUpdateReducer } from './reducers/productReducers';\nimport { userDetailReducer, userRegisterReducer, userSigninReducer, userUpdateProfileReducer } from './reducers/userReducers';\nconst initialState = {\n  // intial states \n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  },\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'PayPal'\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMineList: orderMineListReducer,\n  userDetails: userDetailReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  orderList: orderListReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/src/store.js"],"names":["createStore","compose","applyMiddleware","combineReducers","thunk","cartReducer","orderCreateReducer","orderDetailsReducer","orderListReducer","orderMineListReducer","orderPayReducer","productCreateReducer","productDetailsReducer","productListReducer","productUpdateReducer","userDetailReducer","userRegisterReducer","userSigninReducer","userUpdateProfileReducer","initialState","userSignin","userInfo","localStorage","getItem","JSON","parse","cart","cartItems","shippingAddress","paymentMethod","reducer","productList","productDetails","userRegister","orderCreate","orderDetails","orderPay","orderMineList","userDetails","userUpdateProfile","productCreate","productUpdate","orderList","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,OAArB,EAA8BC,eAA9B,EAA+CC,eAA/C,QAAqE,OAArE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,yBAA5B,C,CACA;;AACA,SAAQC,kBAAR,EACQC,mBADR,EAEQC,gBAFR,EAGQC,oBAHR,EAIQC,eAJR,QAI8B,0BAJ9B;AAMA,SAASC,oBAAT,EAA+BC,qBAA/B,EACSC,kBADT,EAESC,oBAFT,QAEoC,4BAFpC;AAIA,SAASC,iBAAT,EACSC,mBADT,EAESC,iBAFT,EAGSC,wBAHT,QAGyC,yBAHzC;AAMA,MAAMC,YAAY,GAAG;AACjB;AACAC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAsB,UAAtB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAsB,UAAtB,CAAX,CADQ,GAER;AAHM,GAFK;AAOjBG,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAEL,YAAY,CAACC,OAAb,CAAqB,WAArB,IACTC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADS,GAEX,EAHE;AAIFK,IAAAA,eAAe,EAAEN,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACfC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAsB,iBAAtB,CAAX,CADe,GAGjB,EAPE;AAQFM,IAAAA,aAAa,EAAE;AARb;AAPW,CAArB;AAkBA,MAAMC,OAAO,GAAG3B,eAAe,CAAC;AAC5B4B,EAAAA,WAAW,EAAElB,kBADe;AAE5BmB,EAAAA,cAAc,EAAEpB,qBAFY;AAG5Bc,EAAAA,IAAI,EAAErB,WAHsB;AAI5Be,EAAAA,UAAU,EAAEH,iBAJgB;AAK5BgB,EAAAA,YAAY,EAACjB,mBALe;AAM5BkB,EAAAA,WAAW,EAAE5B,kBANe;AAO5B6B,EAAAA,YAAY,EAAE5B,mBAPc;AAQ5B6B,EAAAA,QAAQ,EAAE1B,eARkB;AAS5B2B,EAAAA,aAAa,EAAC5B,oBATc;AAU5B6B,EAAAA,WAAW,EAAEvB,iBAVe;AAW5BwB,EAAAA,iBAAiB,EAACrB,wBAXU;AAa5BsB,EAAAA,aAAa,EAAE7B,oBAba;AAc5B8B,EAAAA,aAAa,EAAE3B,oBAda;AAe5B4B,EAAAA,SAAS,EAAElC;AAfiB,CAAD,CAA/B;AAoBA,MAAMmC,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+C5C,OAAvE;AACA,MAAM6C,KAAK,GAAG9C,WAAW,CAAC8B,OAAD,EAAUX,YAAV,EAAwBwB,eAAe,CAACzC,eAAe,CAACE,KAAD,CAAhB,CAAvC,CAAzB;AAGA,eAAe0C,KAAf","sourcesContent":["import {createStore, compose, applyMiddleware, combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\n// import { orderCreateReducer } from './reducers/orderReducers';\nimport {orderCreateReducer, \n        orderDetailsReducer, \n        orderListReducer, \n        orderMineListReducer, \n        orderPayReducer} from './reducers/orderReducers'\n\nimport { productCreateReducer, productDetailsReducer,\n         productListReducer, \n         productUpdateReducer} from './reducers/productReducers';\n\nimport { userDetailReducer, \n         userRegisterReducer, \n         userSigninReducer, \n         userUpdateProfileReducer } from './reducers/userReducers';\n\n\nconst initialState = {\n    // intial states \n    userSignin: {\n        userInfo: localStorage.getItem ('userInfo')\n        ? JSON.parse(localStorage.getItem ('userInfo'))\n        : null,    \n    },\n    cart: {\n        cartItems: localStorage.getItem('cartItems')\n        ? JSON.parse(localStorage.getItem('cartItems')):\n        [],\n        shippingAddress: localStorage.getItem('shippingAddress')\n        ? JSON.parse(localStorage.getItem ('shippingAddress'))\n        : \n        {},\n        paymentMethod: 'PayPal',\n    }, \n};\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userSignin: userSigninReducer,\n    userRegister:userRegisterReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderMineList:orderMineListReducer,\n    userDetails: userDetailReducer,\n    userUpdateProfile:userUpdateProfileReducer,\n\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    orderList: orderListReducer,\n\n\n})\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk))\n)\n\nexport default store;"]},"metadata":{},"sourceType":"module"}