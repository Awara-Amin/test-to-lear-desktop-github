{"ast":null,"code":"import _regeneratorRuntime from \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/src/screens/CategoryEditScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport Axios from \"axios\";\nimport { detailsCategory, updateCategory } from \"../actions/categoryActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { CATEGORY_UPDATE_RESET } from \"../constants/categoryConstants\";\nexport default function CategoryEditScreen(props) {\n  // getting the categoryId from the URL\n  var categoryId = props.match.params.id;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      description = _useState6[0],\n      setDescription = _useState6[1];\n\n  var categoryDetails = useSelector(function (state) {\n    return state.categoryDetails;\n  });\n  var loading = categoryDetails.loading,\n      error = categoryDetails.error,\n      category = categoryDetails.category;\n  console.log(\"esta kaka\");\n  console.log(category);\n  var categoryUpdate = useSelector(function (state) {\n    return state.categoryUpdate;\n  });\n  var loadingUpdate = categoryUpdate.loading,\n      errorUpdate = categoryUpdate.error,\n      successUpdate = categoryUpdate.success;\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (successUpdate) {\n      // dispatch({ type: CATEGORY_UPDATE_RESET });\n      props.history.push(\"/categorylist\");\n    } // if category didnt exist\n\n\n    if (!category || category._id !== categoryId || successUpdate) {\n      dispatch({\n        type: CATEGORY_UPDATE_RESET\n      });\n      dispatch(detailsCategory(categoryId));\n    } else {\n      setName(category.name);\n      setImage(category.image);\n      setDescription(category.description);\n    } // so when we have change in any of these, the useEffect function runs\n\n  }, [category, dispatch, categoryId, successUpdate, props.history]);\n\n  var submitHandler = function submitHandler(e) {\n    e.preventDefault(); // todo: dispatch update product\n\n    dispatch(updateCategory({\n      _id: categoryId,\n      name: name,\n      image: image,\n      description: description\n    }));\n  };\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loadingUpload = _useState8[0],\n      setLoadingUpload = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errorUpload = _useState10[0],\n      setErrorUpload = _useState10[1];\n\n  var userSignin = useSelector(function (state) {\n    return state.userSignin;\n  });\n  var userInfo = userSignin.userInfo;\n\n  var uploadFileHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var file, bodyFormData, _yield$Axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              file = e.target.files[0];\n              bodyFormData = new FormData();\n              bodyFormData.append(\"image\", file); // setLoadingUpload(true);\n\n              _context.prev = 3;\n              _context.next = 6;\n              return Axios.post(\"/api/uploads\", bodyFormData, {\n                headers: {\n                  \"Content-Type\": \"multipart/form-data\",\n                  Authorization: \"Bearer \".concat(userInfo.token)\n                }\n              });\n\n            case 6:\n              _yield$Axios$post = _context.sent;\n              data = _yield$Axios$post.data;\n              setImage(data);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](3);\n              setErrorUpload(_context.t0.message); //   setLoadingUpload(false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 11]]);\n    }));\n\n    return function uploadFileHandler(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // UI part\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Edit Category \", categoryId), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"test kaka\", categoryId)), loadingUpdate && /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 27\n    }\n  }), errorUpdate && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, errorUpdate), loading ? /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }) : error ? /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, error) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    placeholder: \"Enter Name\",\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"image\",\n    type: \"text\",\n    placeholder: \"Image\",\n    value: image,\n    onChange: function onChange(e) {\n      return setImage(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"imagefile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"Upload Image \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"imagefile\",\n    label: \"Upload Image\",\n    onChange: uploadFileHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }), loadingUpload && /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"description\",\n    rows: \"3\",\n    type: \"text\",\n    placeholder: \"Enter description\",\n    value: description,\n    onChange: function onChange(e) {\n      return setDescription(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, \"Update\")))));\n}","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/src/screens/CategoryEditScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Axios","detailsCategory","updateCategory","LoadingBox","MessageBox","CATEGORY_UPDATE_RESET","CategoryEditScreen","props","categoryId","match","params","id","name","setName","image","setImage","description","setDescription","categoryDetails","state","loading","error","category","console","log","categoryUpdate","loadingUpdate","errorUpdate","successUpdate","success","dispatch","history","push","_id","type","submitHandler","e","preventDefault","loadingUpload","setLoadingUpload","errorUpload","setErrorUpload","userSignin","userInfo","uploadFileHandler","file","target","files","bodyFormData","FormData","append","post","headers","Authorization","token","data","message","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport Axios from \"axios\";\nimport { detailsCategory, updateCategory } from \"../actions/categoryActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { CATEGORY_UPDATE_RESET } from \"../constants/categoryConstants\";\n\nexport default function CategoryEditScreen(props) {\n  // getting the categoryId from the URL\n  const categoryId = props.match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const categoryDetails = useSelector((state) => state.categoryDetails);\n  const { loading, error, category } = categoryDetails;\n\n  console.log(\"esta kaka\");\n  console.log(category);\n\n  const categoryUpdate = useSelector((state) => state.categoryUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = categoryUpdate;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (successUpdate) {\n      // dispatch({ type: CATEGORY_UPDATE_RESET });\n      props.history.push(\"/categorylist\");\n    }\n\n    // if category didnt exist\n    if (!category || category._id !== categoryId || successUpdate) {\n      dispatch({ type: CATEGORY_UPDATE_RESET });\n      dispatch(detailsCategory(categoryId));\n    } else {\n      setName(category.name);\n      setImage(category.image);\n      setDescription(category.description);\n    }\n    // so when we have change in any of these, the useEffect function runs\n  }, [category, dispatch, categoryId, successUpdate, props.history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // todo: dispatch update product\n    dispatch(\n      updateCategory({\n        _id: categoryId,\n        name,\n        image,\n        description,\n      })\n    );\n  };\n\n  const [loadingUpload, setLoadingUpload] = useState(false);\n  const [errorUpload, setErrorUpload] = useState(\"\");\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"image\", file);\n    // setLoadingUpload(true);\n    try {\n      const { data } = await Axios.post(\"/api/uploads\", bodyFormData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      });\n\n      setImage(data);\n    } catch (error) {\n      setErrorUpload(error.message);\n      //   setLoadingUpload(false);\n    }\n  };\n\n  // UI part\n  return (\n    <div>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div>\n          <h1>Edit Category {categoryId}</h1>\n          <h1>test kaka{categoryId}</h1>\n        </div>\n        {loadingUpdate && <LoadingBox></LoadingBox>}\n        {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n\n        {loading ? (\n          <LoadingBox></LoadingBox>\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <>\n            <div>\n              <label htmlFor=\"name\">Name</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></input>\n            </div>\n\n            <div>\n              <label htmlFor=\"image\">Image</label>\n              <input\n                id=\"image\"\n                type=\"text\"\n                placeholder=\"Image\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></input>\n            </div>\n\n            <div>\n              <label htmlFor=\"imagefile\">Upload Image </label>\n              <input\n                type=\"file\"\n                id=\"imagefile\"\n                label=\"Upload Image\"\n                onChange={uploadFileHandler}\n              ></input>\n              {loadingUpload && <LoadingBox></LoadingBox>}\n            </div>\n\n            <div>\n              <label htmlFor=\"description\">Description</label>\n              <textarea\n                id=\"description\"\n                rows=\"3\"\n                type=\"text\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></textarea>\n            </div>\n\n            <div>\n              <label></label>\n              <button className=\"primary\" type=\"submit\">\n                Update\n              </button>\n            </div>\n          </>\n        )}\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}