{"ast":null,"code":"import _toConsumableArray from \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/src/components/ChatBox.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nvar ENDPOINT = window.location.host.indexOf('localhost') >= 0 ? 'http://127.0.0.1:5000' : window.location.host;\nexport default function ChatBox(props) {\n  var _this = this;\n\n  var userInfo = props.userInfo;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      socket = _useState2[0],\n      setSocket = _useState2[1];\n\n  var uiMessagesRef = useRef(null);\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isOpen = _useState4[0],\n      setIsOpen = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messageBody = _useState6[0],\n      setMessageBody = _useState6[1];\n\n  var _useState7 = useState([{\n    name: 'Admin',\n    body: 'Hello there, Please ask your question.'\n  }]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      messages = _useState8[0],\n      setMessages = _useState8[1];\n\n  useEffect(function () {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n\n    if (socket) {\n      socket.emit('onLogin', {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin\n      });\n      socket.on('message', function (data) {\n        setMessages([].concat(_toConsumableArray(messages), [{\n          body: data.body,\n          name: data.name\n        }]));\n      });\n    }\n  }, [messages, isOpen, socket, userInfo]);\n\n  var supportHandler = function supportHandler() {\n    setIsOpen(true);\n    console.log(ENDPOINT);\n    var sk = socketIOClient(ENDPOINT);\n    setSocket(sk);\n  };\n\n  var submitHandler = function submitHandler(e) {\n    e.preventDefault();\n\n    if (!messageBody.trim()) {\n      alert('Error. Please type message.');\n    } else {\n      setMessages([].concat(_toConsumableArray(messages), [{\n        body: messageBody,\n        name: userInfo.name\n      }]));\n      setMessageBody('');\n      setTimeout(function () {\n        socket.emit('onMessage', {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: userInfo._id\n        });\n      }, 1000);\n    }\n  };\n\n  var closeHandler = function closeHandler() {\n    setIsOpen(false);\n  }; //   the UI part\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, !isOpen ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: supportHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-support\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Support \"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: closeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    ref: uiMessagesRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, messages.map(function (msg, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"\".concat(msg.name, \": \")), \" \", msg.body);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: messageBody,\n    onChange: function onChange(e) {\n      return setMessageBody(e.target.value);\n    },\n    type: \"text\",\n    placeholder: \"type message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"Send\")))));\n}","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/src/components/ChatBox.js"],"names":["React","useEffect","useRef","useState","socketIOClient","ENDPOINT","window","location","host","indexOf","ChatBox","props","userInfo","socket","setSocket","uiMessagesRef","isOpen","setIsOpen","messageBody","setMessageBody","name","body","messages","setMessages","current","scrollBy","top","clientHeight","left","behavior","emit","_id","isAdmin","on","data","supportHandler","console","log","sk","submitHandler","e","preventDefault","trim","alert","setTimeout","closeHandler","map","msg","index","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst ENDPOINT =\n  window.location.host.indexOf('localhost') >= 0\n    ? 'http://127.0.0.1:5000'\n    : window.location.host;\n\nexport default function ChatBox(props) {\n  const { userInfo } = props;\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [messageBody, setMessageBody] = useState('');\n  const [messages, setMessages] = useState([\n    { name: 'Admin', body: 'Hello there, Please ask your question.' },\n  ]);\n\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n    if (socket) {\n      socket.emit('onLogin', {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin,\n      });\n      socket.on('message', (data) => {\n        setMessages([...messages, { body: data.body, name: data.name }]);\n      });\n    }\n  }, [messages, isOpen, socket, userInfo]);\n\n  const supportHandler = () => {\n    setIsOpen(true);\n    console.log(ENDPOINT);\n    const sk = socketIOClient(ENDPOINT);\n    setSocket(sk);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (!messageBody.trim()) {\n      alert('Error. Please type message.');\n    } else {\n      setMessages([...messages, { body: messageBody, name: userInfo.name }]);\n      setMessageBody('');\n      setTimeout(() => {\n        socket.emit('onMessage', {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: userInfo._id,\n        });\n      }, 1000);\n    }\n  };\n  const closeHandler = () => {\n    setIsOpen(false);\n  };\n\n\n//   the UI part\n  return (\n    <div className=\"chatbox\">\n      {!isOpen ? (\n        <button type=\"button\" onClick={supportHandler}>\n          <i className=\"fa fa-support\" />\n        </button>\n      ) : (\n        <div className=\"card card-body\">\n          <div className=\"row\">\n            <strong>Support </strong>\n            <button type=\"button\" onClick={closeHandler}>\n              <i className=\"fa fa-close\" />\n            </button>\n          </div>\n          <ul ref={uiMessagesRef}>\n            {messages.map((msg, index) => (\n              <li key={index}>\n                <strong>{`${msg.name}: `}</strong> {msg.body}\n              </li>\n            ))}\n          </ul>\n          <div>\n            <form onSubmit={submitHandler} className=\"row\">\n              <input\n                value={messageBody}\n                onChange={(e) => setMessageBody(e.target.value)}\n                type=\"text\"\n                placeholder=\"type message\"\n              />\n              <button type=\"submit\">Send</button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}