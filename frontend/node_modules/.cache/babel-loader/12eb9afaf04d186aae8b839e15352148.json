{"ast":null,"code":"var _jsxFileName = \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/OurWebsite/ourWebsite/frontend/src/components/TextAnimation.js\";\nimport React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextAnimation() {\n  const reactArray = \"Glossy\".split(\"\"); //   return <Wrapper>Swift</Wrapper>;\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: \"Swift\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n} // const animation = keyframes`\n// 0% {opacity: 0;}\n// 25% {opacity: 1;}\n// 75% {opacity: 1;}\n// 100% {opacity:0}\n// `;\n// const Wrapper = styled.span`\n//   opacity: 0;\n//   color: yellow;\n//   animation-name: ${animation};\n//   animation-duration: 6s;\n//   animation-fill-mode: forwards;\n//   animation-iteration-count: infinite;\n// `;\n\n_c = TextAnimation;\nconst animation = keyframes`\n0% {opacity: 0; \n    transform: translateY(-100px) skewY(10deg) skewX(10deg) rotateZ(30deg);\n    filter: blur(10px);}\n}\n25% {opacity: 1; \n    transform: translateY(0px) skewY(0deg) skewX(0deg) rotateZ(0deg);\n    filter: blur(0px);}\n75% {opacity: 1; \n    transform: translateY(0px) skewY(0deg) skewX(0deg) rotateZ(0deg);\n    filter: blur(0px);}\n100% {opacity:0; \n    transform: translateY(-100px) skewX(10deg) rotateZ(30deg);\n    filter: blur(10px);}\n`;\nconst Wrapper = styled.span`\n  display: inline-block;\n\n  span {\n    display: inline-block;\n    opacity: 0;\n    color: yellow;\n    animation-name: ${animation};\n    animation-duration: 6s;\n    animation-fill-mode: forwards;\n    animation-iteration-count: infinite;\n  }\n`;\n_c2 = Wrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextAnimation\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/OurWebsite/ourWebsite/frontend/src/components/TextAnimation.js"],"names":["React","styled","keyframes","TextAnimation","reactArray","split","animation","Wrapper","span"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,QAAMC,UAAU,GAAG,SAASC,KAAT,CAAe,EAAf,CAAnB,CADsC,CAEtC;;AACA,sBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAnBwBF,a;AAqBxB,MAAMG,SAAS,GAAGJ,SAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAgBA,MAAMK,OAAO,GAAGN,MAAM,CAACO,IAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBF,SAAU;AAChC;AACA;AACA;AACA;AACA,CAZA;MAAMC,O","sourcesContent":["import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nexport default function TextAnimation() {\n  const reactArray = \"Glossy\".split(\"\");\n  //   return <Wrapper>Swift</Wrapper>;\n  return <Wrapper>Swift</Wrapper>;\n}\n\n// const animation = keyframes`\n// 0% {opacity: 0;}\n// 25% {opacity: 1;}\n// 75% {opacity: 1;}\n// 100% {opacity:0}\n// `;\n// const Wrapper = styled.span`\n//   opacity: 0;\n//   color: yellow;\n//   animation-name: ${animation};\n//   animation-duration: 6s;\n//   animation-fill-mode: forwards;\n//   animation-iteration-count: infinite;\n// `;\n\nconst animation = keyframes`\n0% {opacity: 0; \n    transform: translateY(-100px) skewY(10deg) skewX(10deg) rotateZ(30deg);\n    filter: blur(10px);}\n}\n25% {opacity: 1; \n    transform: translateY(0px) skewY(0deg) skewX(0deg) rotateZ(0deg);\n    filter: blur(0px);}\n75% {opacity: 1; \n    transform: translateY(0px) skewY(0deg) skewX(0deg) rotateZ(0deg);\n    filter: blur(0px);}\n100% {opacity:0; \n    transform: translateY(-100px) skewX(10deg) rotateZ(30deg);\n    filter: blur(10px);}\n`;\n\nconst Wrapper = styled.span`\n  display: inline-block;\n\n  span {\n    display: inline-block;\n    opacity: 0;\n    color: yellow;\n    animation-name: ${animation};\n    animation-duration: 6s;\n    animation-fill-mode: forwards;\n    animation-iteration-count: infinite;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}