{"ast":null,"code":"var _jsxFileName = \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/src/screens/OrderListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteOrder, listOrders } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_DELETE_RESET } from '../constants/orderConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrderListScreen(props) {\n  _s();\n\n  const orderList = useSelector(state => state.orderList);\n  const {\n    loading,\n    error,\n    orders\n  } = orderList;\n  const orderDelete = useSelector(state => state.orderDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = orderDelete;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: ORDER_DELETE_RESET\n    });\n    dispatch(listOrders());\n  }, [dispatch, successDelete]);\n\n  const deleteHandler = order => {\n    // todo; delete handler\n    if (window.confirm('Are you sure to delete?')) {\n      dispatch(deleteOrder(order._id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Orders kaka\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), loadingDelete && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 31\n      }, this), errorDelete && /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: errorDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"USER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TOTAL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"PAID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DELIEVERD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ACTIONS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.createAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.totalPrice.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isPaid ? order.paidAt : \"Not\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isDelivered ? order.deliveredAt.substring(0, 10) : \"Not\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"small\",\n                onClick: () => {\n                  props.history.push(`/order/${order._id}`);\n                },\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"small\",\n                onClick: () => deleteHandler(order),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this)]\n          }, order._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderListScreen, \"MnkrgBnhA5U1xVd7+iGP6WKOzGw=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = OrderListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderListScreen\");","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/react/amazona/frontend/src/screens/OrderListScreen.js"],"names":["React","useEffect","useDispatch","useSelector","deleteOrder","listOrders","LoadingBox","MessageBox","ORDER_DELETE_RESET","OrderListScreen","props","orderList","state","loading","error","orders","orderDelete","loadingDelete","errorDelete","success","successDelete","dispatch","type","deleteHandler","order","window","confirm","_id","map","user","name","createAt","totalPrice","toFixed","isPaid","paidAt","isDelivered","deliveredAt","substring","history","push"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { deleteOrder, listOrders } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_DELETE_RESET } from '../constants/orderConstants';\n\nexport default function OrderListScreen(props) {\n    const orderList = useSelector((state) => state.orderList);\n    const {loading, error, orders} = orderList;\n\n    const orderDelete = useSelector((state) => state.orderDelete);\n    const {\n        loading: loadingDelete, \n        error:errorDelete, \n        success:successDelete\n        } = orderDelete;\n\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({type:ORDER_DELETE_RESET})\n        dispatch(listOrders());\n        \n    }, [dispatch, successDelete]);\n\n    const deleteHandler = (order) =>{\n        // todo; delete handler\n        if(window.confirm('Are you sure to delete?')){\n            dispatch(deleteOrder(order._id));\n        }\n    };\n\n\n\n    return (\n        <div>\n            <div>\n            <h1>Orders kaka</h1>\n            {loadingDelete && <LoadingBox></LoadingBox>}\n            {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\n\n            {loading ? (\n            <LoadingBox></LoadingBox>) \n            : \n            error ? (\n            <MessageBox variant=\"danger\">{error}</MessageBox>) \n            :\n            (\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>USER</th>\n                            <th>DATE</th>\n                            <th>TOTAL</th>\n                            <th>PAID</th>\n                            <th>DELIEVERD</th>\n                            <th>ACTIONS</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders.map((order) =>(\n                            <tr key={order._id}>\n                                <td>{order._id}</td>\n                                <td>{order.user.name}</td>\n                                {/* <td>{order.createAt.substring(0, 10)}</td> */}\n                                <td>{order.createAt}</td>\n                                <td>{order.totalPrice.toFixed(2)}</td>\n                                {/* <td>{order.isPaid ? order.paidAt.substring(0, 10) : \"Not\"}</td> */}\n                                <td>{order.isPaid ? order.paidAt : \"Not\"}</td>\n                                <td>\n                                    {order.isDelivered \n                                    ? \n                                    order.deliveredAt.substring(0, 10) \n                                    : \n                                 \"Not\" }\n                                 </td>\n                                <td>\n                                    <button type=\"button\" className=\"small\"\n                                                onClick={() => {\n                                                    props.history.push(`/order/${order._id}`);\n                                                }}>\n                                                Details\n                                    </button>\n\n                                    <button\n                                    type=\"button\" \n                                    className=\"small\"\n                                    onClick={() => deleteHandler(order)\n                                    }\n                                    >Delete\n\n                                    </button>\n\n\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            )\n           }\n        </div>\n            \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}