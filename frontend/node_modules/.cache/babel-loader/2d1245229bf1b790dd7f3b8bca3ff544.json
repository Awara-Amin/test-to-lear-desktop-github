{"ast":null,"code":"var _jsxFileName = \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/src/screens/CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\nimport MessageBox from \"../components/MessageBox\"; // bootstrap\n\nimport { Helmet } from \"react-helmet\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartScreen(props) {\n  _s();\n\n  const productId = props.match.params.id;\n\n  const queryString = require(\"query-string\"); // mine kaka 2022\n  // const qty = props.location.search\n  //    ? Number(props.location.search.split(\"=\")[1])\n  //    :\n  //    1;\n\n\n  const qty = props.location.search ? Number(queryString.parse(props.location.search).qty) : 1;\n  const size = props.location.search ? String(queryString.parse(props.location.search).size) : 1;\n  const color = props.location.search ? String(queryString.parse(props.location.search).color) : 1; //    const size = props.location.search\n  //    ? String(props.location.search.split(\"=\").[2])\n  //    :\n  //    1;\n\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems,\n    error\n  } = cart;\n  console.log(cartItems);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty, size, color));\n    }\n  }, [dispatch, productId, qty, size, color]);\n\n  const removeFromCartHandler = id => {\n    // detele action here kaka\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    props.history.push(\"/signin?redirect=/shipping\");\n  };\n\n  const updateCartHandler = () => {\n    console.log(\"create the function\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shopping Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(MessageBox, {\n          children: [\"Cart is empty. \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Go Shopping\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: cartItems.map(item => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.image,\n                  alt: item.name,\n                  className: \"img-fluid rounded img-thumbnail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/product/${item.product}`,\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => updateCartHandler(item, item.quantity - 1),\n                  variant: \"light\",\n                  disabled: item.quantity === 1,\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-minus-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"light\",\n                  disabled: item.quantity === item.countInStock,\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-plus-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                children: [\"$\", item.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: item.qty,\n                  onChange: e => dispatch(addToCart(item.product, Number(e.target.value))),\n                  children: [...Array(item.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: x + 1,\n                    children: x + 1\n                  }, x + 1, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 2,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"light\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-trash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)\n          }, item.product, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: [\"Subtotal (\", cartItems.reduce((a, c) => a + c.qty, 0), \" items) : $\", cartItems.reduce((a, c) => a + c.price * c.qty, 0)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-grid\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    variant: \"primary\",\n                    disabled: cartItems.length === 0,\n                    children: \"Proceed to Checkout\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n} // export default function CartScreen() {\n//   const { state, dispatch: ctxDispatch } = useContext(Store);\n//   const {\n//     cart: { cartItems },\n//   } = state;\n//   return (\n//     <div>\n//       <Helmet>\n//         <title>Shopping Cart</title>\n//       </Helmet>\n//       <h1>Shopping Cart</h1>\n//       <Row>\n//         <Col md={8}>\n//           {cartItems.length === 0 ? (\n//             <MessageBox>\n//               Cart is empty. <Link to=\"/\">Go Shopping</Link>\n//             </MessageBox>\n//           ) : (\n//             <ListGroup>\n//               {cartItems.map((item) => (\n//                 <ListGroup.Item key={item._id}>\n//                   <Row className=\"align-items-center\">\n//                     <Col md={4}>\n//                       <img\n//                         src={item.image}\n//                         alt={item.name}\n//                         className=\"img-fluid rounded img-thumbnail\"\n//                       ></img>{' '}\n//                       <Link to={`/product/${item.slug}`}>{item.name}</Link>\n//                     </Col>\n//                     <Col md={3}>\n//                       <Button variant=\"light\" disabled={item.quantity === 1}>\n//                         <i className=\"fas fa-minus-circle\"></i>\n//                       </Button>{' '}\n//                       <span>{item.quantity}</span>{' '}\n//                       <Button\n//                         variant=\"light\"\n//                         disabled={item.quantity === item.countInStock}\n//                       >\n//                         <i className=\"fas fa-plus-circle\"></i>\n//                       </Button>\n//                     </Col>\n//                     <Col md={3}>${item.price}</Col>\n//                     <Col md={2}>\n//                       <Button variant=\"light\">\n//                         <i className=\"fas fa-trash\"></i>\n//                       </Button>\n//                     </Col>\n//                   </Row>\n//                 </ListGroup.Item>\n//               ))}\n//             </ListGroup>\n//           )}\n//         </Col>\n//         <Col md={4}>\n//           <Card>\n//             <Card.Body>\n//               <ListGroup variant=\"flush\">\n//                 <ListGroup.Item>\n//                   <h3>\n//                     Subtotal ({cartItems.reduce((a, c) => a + c.quantity, 0)}{' '}\n//                     items) : $\n//                     {cartItems.reduce((a, c) => a + c.price * c.quantity, 0)}\n//                   </h3>\n//                 </ListGroup.Item>\n//                 <ListGroup.Item>\n//                   <div className=\"d-grid\">\n//                     <Button\n//                       type=\"button\"\n//                       variant=\"primary\"\n//                       disabled={cartItems.length === 0}\n//                     >\n//                       Proceed to Checkout\n//                     </Button>\n//                   </div>\n//                 </ListGroup.Item>\n//               </ListGroup>\n//             </Card.Body>\n//           </Card>\n//         </Col>\n//       </Row>\n//     </div>\n//   );\n// }\n\n_s(CartScreen, \"O8kV4FMad4uUEER48J0xtNwHiNw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","useDispatch","useSelector","Link","addToCart","removeFromCart","MessageBox","Helmet","ListGroup","Button","Card","Row","Col","CartScreen","props","productId","match","params","id","queryString","require","qty","location","search","Number","parse","size","String","color","cart","state","cartItems","error","console","log","dispatch","removeFromCartHandler","checkoutHandler","history","push","updateCartHandler","length","map","item","image","name","product","quantity","countInStock","price","e","target","value","Array","keys","x","reduce","a","c"],"mappings":"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A;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA/GF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyKD,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAnTwB5B,U;UA4BTX,W,EAIID,W;;;KAhCKY,U","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\nimport MessageBox from \"../components/MessageBox\";\n// bootstrap\nimport { Helmet } from \"react-helmet\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default function CartScreen(props) {\n  const productId = props.match.params.id;\n\n  const queryString = require(\"query-string\");\n\n  // mine kaka 2022\n  // const qty = props.location.search\n  //    ? Number(props.location.search.split(\"=\")[1])\n  //    :\n  //    1;\n\n  const qty = props.location.search\n    ? Number(queryString.parse(props.location.search).qty)\n    : 1;\n\n  const size = props.location.search\n    ? String(queryString.parse(props.location.search).size)\n    : 1;\n\n  const color = props.location.search\n    ? String(queryString.parse(props.location.search).color)\n    : 1;\n\n  //    const size = props.location.search\n  //    ? String(props.location.search.split(\"=\").[2])\n  //    :\n  //    1;\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems, error } = cart;\n  console.log(cartItems);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty, size, color));\n    }\n  }, [dispatch, productId, qty, size, color]);\n\n  const removeFromCartHandler = (id) => {\n    // detele action here kaka\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    props.history.push(\"/signin?redirect=/shipping\");\n  };\n\n  const updateCartHandler = () => {\n    console.log(\"create the function\");\n  };\n\n  return (\n    <div>\n      <Helmet>\n        <title>Shopping Cart</title>\n      </Helmet>\n      <h1>Shopping Cart</h1>\n      <Row>\n        <Col md={8}>\n          {cartItems.length === 0 ? (\n            <MessageBox>\n              Cart is empty. <Link to=\"/\">Go Shopping</Link>\n            </MessageBox>\n          ) : (\n            <ListGroup>\n              {cartItems.map((item) => (\n                <ListGroup.Item key={item.product}>\n                  <Row className=\"align-items-center\">\n                    <Col md={2}>\n                      <img\n                        src={item.image}\n                        alt={item.name}\n                        className=\"img-fluid rounded img-thumbnail\"\n                      ></img>{\" \"}\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\n                    </Col>\n                    {/* <Col md={1}>\n                      <span>Size</span>\n                      <span className=\"sizeInCartScreen\">{item.size}</span>\n                    </Col> */}\n                    {/* <Col md={1}>\n                      <span>Color</span>\n                      <span className=\"sizeInCartScreen\">{item.color}</span>\n                    </Col> */}\n\n                    {/* <div className=\"sizeInCartScreen\">\n                      <span>Size</span>\n                      <span className=\"sizeInCartScreen\">{item.size}</span>\n                    </div> */}\n\n                    {/* <div className=\"sizeInCartScreen\">\n                      <span>Color</span>\n                      <span className=\"sizeInCartScreen\">{item.color}</span>\n                    </div> */}\n                    <Col md={2}>\n                      {/* <Button variant=\"light\" disabled={item.quantity === 1}> */}\n                      <Button\n                        onClick={() =>\n                          updateCartHandler(item, item.quantity - 1)\n                        }\n                        variant=\"light\"\n                        disabled={item.quantity === 1}\n                      >\n                        <i className=\"fa fa-minus-circle\"></i>\n                      </Button>{\" \"}\n                      <span>{item.quantity}</span>{\" \"}\n                      <Button\n                        variant=\"light\"\n                        disabled={item.quantity === item.countInStock}\n                      >\n                        <i className=\"fa fa-plus-circle\"></i>\n                      </Button>\n                    </Col>\n                    <Col md={2}>${item.price}</Col>\n                    <Col md={2}>\n                      <select\n                        value={item.qty}\n                        onChange={(e) =>\n                          dispatch(\n                            addToCart(item.product, Number(e.target.value))\n                          )\n                        }\n                      >\n                        {[...Array(item.countInStock).keys()].map((x) => (\n                          <option key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </option>\n                        ))}\n                      </select>\n                    </Col>\n                    {/* <div>\n                      <select\n                        value={item.qty}\n                        onChange={(e) =>\n                          dispatch(\n                            addToCart(item.product, Number(e.target.value))\n                          )\n                        }\n                      >\n                        {[...Array(item.countInStock).keys()].map((x) => (\n                          <option key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </option>\n                        ))}\n                      </select>\n                    </div> */}\n\n                    {/* <div>${item.price}</div> */}\n                    <Col md={2}>\n                      <Button variant=\"light\">\n                        <i className=\"fas fa-trash\"></i>\n                      </Button>\n                    </Col>\n\n                    {/* <div>\n                      <button\n                        type=\"button\"\n                        onClick={() => removeFromCartHandler(item.product)}\n                      >\n                        Delete here\n                      </button>\n                    </div> */}\n                  </Row>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          )}\n        </Col>\n        <Col md={4}>\n          <Card>\n            <Card.Body>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h4>\n                    Subtotal ({cartItems.reduce((a, c) => a + c.qty, 0)} items)\n                    : ${cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\n                  </h4>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <div className=\"d-grid\">\n                    <Button\n                      type=\"button\"\n                      variant=\"primary\"\n                      disabled={cartItems.length === 0}\n                    >\n                      Proceed to Checkout\n                    </Button>\n                  </div>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        {/* <div className=\"col-1\"> */}\n        {/* <div className=\"card card-body\"> */}\n        {/* <ul> */}\n        {/* <li>\n                  <h2>\n                    Subtotal ({cartItems.reduce((a, c) => a + c.qty, 0)} items)\n                    : ${cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\n                  </h2>\n                </li> */}\n\n        {/* <li>\n                  <button\n                    type=\"button\"\n                    onClick={checkoutHandler}\n                    className=\"primary block\"\n                    disabled={cartItems.length === 0}\n                  >\n                    Proceed to Checkout\n                  </button>\n                </li> */}\n        {/* </ul> */}\n        {/* </div> */}\n        {/* </div> */}\n      </Row>\n    </div>\n  );\n}\n\n// export default function CartScreen() {\n//   const { state, dispatch: ctxDispatch } = useContext(Store);\n//   const {\n//     cart: { cartItems },\n//   } = state;\n\n//   return (\n//     <div>\n//       <Helmet>\n//         <title>Shopping Cart</title>\n//       </Helmet>\n//       <h1>Shopping Cart</h1>\n//       <Row>\n//         <Col md={8}>\n//           {cartItems.length === 0 ? (\n//             <MessageBox>\n//               Cart is empty. <Link to=\"/\">Go Shopping</Link>\n//             </MessageBox>\n//           ) : (\n//             <ListGroup>\n//               {cartItems.map((item) => (\n//                 <ListGroup.Item key={item._id}>\n//                   <Row className=\"align-items-center\">\n//                     <Col md={4}>\n//                       <img\n//                         src={item.image}\n//                         alt={item.name}\n//                         className=\"img-fluid rounded img-thumbnail\"\n//                       ></img>{' '}\n//                       <Link to={`/product/${item.slug}`}>{item.name}</Link>\n//                     </Col>\n//                     <Col md={3}>\n//                       <Button variant=\"light\" disabled={item.quantity === 1}>\n//                         <i className=\"fas fa-minus-circle\"></i>\n//                       </Button>{' '}\n//                       <span>{item.quantity}</span>{' '}\n//                       <Button\n//                         variant=\"light\"\n//                         disabled={item.quantity === item.countInStock}\n//                       >\n//                         <i className=\"fas fa-plus-circle\"></i>\n//                       </Button>\n//                     </Col>\n//                     <Col md={3}>${item.price}</Col>\n//                     <Col md={2}>\n//                       <Button variant=\"light\">\n//                         <i className=\"fas fa-trash\"></i>\n//                       </Button>\n//                     </Col>\n//                   </Row>\n//                 </ListGroup.Item>\n//               ))}\n//             </ListGroup>\n//           )}\n//         </Col>\n//         <Col md={4}>\n//           <Card>\n//             <Card.Body>\n//               <ListGroup variant=\"flush\">\n//                 <ListGroup.Item>\n//                   <h3>\n//                     Subtotal ({cartItems.reduce((a, c) => a + c.quantity, 0)}{' '}\n//                     items) : $\n//                     {cartItems.reduce((a, c) => a + c.price * c.quantity, 0)}\n//                   </h3>\n//                 </ListGroup.Item>\n//                 <ListGroup.Item>\n//                   <div className=\"d-grid\">\n//                     <Button\n//                       type=\"button\"\n//                       variant=\"primary\"\n//                       disabled={cartItems.length === 0}\n//                     >\n//                       Proceed to Checkout\n//                     </Button>\n//                   </div>\n//                 </ListGroup.Item>\n//               </ListGroup>\n//             </Card.Body>\n//           </Card>\n//         </Col>\n//       </Row>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}