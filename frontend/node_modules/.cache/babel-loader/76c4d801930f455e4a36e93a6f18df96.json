{"ast":null,"code":"var _jsxFileName = \"/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/src/screens/CategoryEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport Axios from \"axios\";\nimport { detailsCategory, updateCategory } from \"../actions/categoryActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { CATEGORY_UPDATE_RESET } from \"../constants/categoryConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CategoryEditScreen(props) {\n  _s();\n\n  // getting the categoryId from the URL\n  const categoryId = props.match.params.id;\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const categoryDetails = useSelector(state => state.categoryDetails);\n  const {\n    loading,\n    error,\n    category\n  } = categoryDetails;\n  console.log(\"esta kaka\");\n  console.log(category);\n  const categoryUpdate = useSelector(state => state.categoryUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = categoryUpdate;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successUpdate) {\n      // dispatch({ type: CATEGORY_UPDATE_RESET });\n      props.history.push(\"/categorylist\");\n    } // if category didnt exist\n\n\n    if (!category || category._id !== categoryId || successUpdate) {\n      dispatch({\n        type: CATEGORY_UPDATE_RESET\n      });\n      dispatch(detailsCategory(categoryId));\n    } else {\n      setName(category.name);\n      setImage(category.image);\n      setDescription(category.description);\n    } // so when we have change in any of these, the useEffect function runs\n\n  }, [category, dispatch, categoryId, successUpdate, props.history]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // todo: dispatch update product\n\n    dispatch(updateCategory({\n      _id: categoryId,\n      name,\n      image,\n      description\n    }));\n  };\n\n  const [loadingUpload, setLoadingUpload] = useState(false);\n  const [errorUpload, setErrorUpload] = useState(\"\");\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"image\", file); // setLoadingUpload(true);\n\n    try {\n      const {\n        data\n      } = await Axios.post(\"/api/uploads\", bodyFormData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      setImage(data);\n    } catch (error) {\n      setErrorUpload(error.message); //   setLoadingUpload(false);\n    }\n  }; // UI part\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Edit Category \", categoryId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"test kaka\", categoryId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 27\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"image\",\n            type: \"text\",\n            placeholder: \"Image\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"imagefile\",\n            children: \"Upload Image \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"imagefile\",\n            label: \"Upload Image\",\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), loadingUpload && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            rows: \"3\",\n            type: \"text\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n} // lera kaka\n// import React from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import Card from 'react-bootstrap/Card';\n// import { Link } from 'react-router-dom';\n// import {\n//   addToCart,\n//   addToFavorite,\n//   removeFromFavorite,\n// } from '../actions/cartActions';\n// import Rating from './Rating';\n// import Tooltip from 'react-bootstrap/Tooltip';\n// import OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n// import Preview from '@mui/icons-material/Preview';\n// import FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\n// import Favorite from '@mui/icons-material/Favorite';\n// import AddShoppingCart from '@mui/icons-material/AddShoppingCart';\n// export default function Product(props) {\n//   const { product } = props;\n//   const renderTooltipv = <Tooltip>View Product</Tooltip>;\n//   const renderTooltipr = <Tooltip>Remove from Wishlist</Tooltip>;\n//   const renderTooltipf = <Tooltip>Add to Wishlist</Tooltip>;\n//   const renderTooltipc = <Tooltip>Add to Cart</Tooltip>;\n//   const favorite = useSelector((state) => state.favorite);\n//   const { favoriteItems } = favorite;\n//   const dispatch = useDispatch();\n//   const addToFavoriteHandler = () => {\n//     if (favoriteItems.product) {\n//       dispatch(removeFromFavorite(product._id));\n//     } else {\n//       dispatch(addToFavorite(product._id));\n//     }\n//     console.log(favoriteItems.product);\n//   };\n//   return (\n//     <Card\n//       key={product._id}\n//       className=\"container box d-flex w-100 col-md-3 col-sm-4\"\n//     >\n//       <div className=\"card-img-top\">\n//         <img src={product.image} className=\"card-img-top\" alt={product.name} />\n//         <ul className=\"icon\">\n//           <OverlayTrigger placement=\"left\" overlay={renderTooltipv}>\n//             <li className=\"preview-color\">\n//               <Link\n//                 className=\"preview-color-link\"\n//                 to={`/product/${product._id}`}\n//               >\n//                 <Preview />\n//               </Link>\n//             </li>\n//           </OverlayTrigger>\n//           <li className=\"preview-color\">\n//             {favoriteItems? (\n//               <OverlayTrigger placement=\"left\" overlay={renderTooltipr}>\n//                 <Favorite onClick={() => addToFavoriteHandler(product._id)} />\n//               </OverlayTrigger>\n//             ) : (\n//               <OverlayTrigger placement=\"left\" overlay={renderTooltipf}>\n//                 <FavoriteBorderIcon\n//                   onClick={() => addToFavoriteHandler(product._id)}\n//                 />\n//               </OverlayTrigger>\n//             )}\n//           </li>\n//           <OverlayTrigger placement=\"left\" overlay={renderTooltipc}>\n//             <li className=\"preview-color\">\n//               {product.countInStock === 0 ? (\n//                 <AddShoppingCart\n//                   onClick={(e) => dispatch(addToCart(product._id, 1))}\n//                   disabled\n//                 />\n//               ) : (\n//                 <AddShoppingCart\n//                   onClick={(e) => dispatch(addToCart(product._id, 1))}\n//                 />\n//               )}\n//             </li>\n//           </OverlayTrigger>\n//         </ul>\n//       </div>\n//       <Card.Body className=\"center\">\n//         <Link className=\"text-color\" to={`/product/${product._id}`}>\n//           <div>{product.name}</div>\n//         </Link>\n//         <Rating\n//           rating={product.rating}\n//           numReviews={product.numReviews}\n//         ></Rating>\n//         <Card.Text>\n//           <div className=\"price-color\">${product.price}</div>\n//           <div>\n//             <Link to={`/seller/${product.seller._id}`}>\n//               {product.seller.seller.name}\n//             </Link>\n//           </div>\n//         </Card.Text>\n//       </Card.Body>\n//     </Card>\n//   );\n// }\n//lera too\n\n_s(CategoryEditScreen, \"fntfpughqoqRhdgsSBhsgyt+2eo=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n\n_c = CategoryEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryEditScreen\");","map":{"version":3,"sources":["/Users/awaraamin/2020/The-complete-2020-Web-Development-Bootcamp/practice/bootStarp-amazona/amazona/frontend/src/screens/CategoryEditScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Axios","detailsCategory","updateCategory","LoadingBox","MessageBox","CATEGORY_UPDATE_RESET","CategoryEditScreen","props","categoryId","match","params","id","name","setName","image","setImage","description","setDescription","categoryDetails","state","loading","error","category","console","log","categoryUpdate","loadingUpdate","errorUpdate","success","successUpdate","dispatch","history","push","_id","type","submitHandler","e","preventDefault","loadingUpload","setLoadingUpload","errorUpload","setErrorUpload","userSignin","userInfo","uploadFileHandler","file","target","files","bodyFormData","FormData","append","data","post","headers","Authorization","token","message","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport Axios from \"axios\";\nimport { detailsCategory, updateCategory } from \"../actions/categoryActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { CATEGORY_UPDATE_RESET } from \"../constants/categoryConstants\";\n\nexport default function CategoryEditScreen(props) {\n  // getting the categoryId from the URL\n  const categoryId = props.match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const categoryDetails = useSelector((state) => state.categoryDetails);\n  const { loading, error, category } = categoryDetails;\n\n  console.log(\"esta kaka\");\n  console.log(category);\n\n  const categoryUpdate = useSelector((state) => state.categoryUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = categoryUpdate;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (successUpdate) {\n      // dispatch({ type: CATEGORY_UPDATE_RESET });\n      props.history.push(\"/categorylist\");\n    }\n\n    // if category didnt exist\n    if (!category || category._id !== categoryId || successUpdate) {\n      dispatch({ type: CATEGORY_UPDATE_RESET });\n      dispatch(detailsCategory(categoryId));\n    } else {\n      setName(category.name);\n      setImage(category.image);\n      setDescription(category.description);\n    }\n    // so when we have change in any of these, the useEffect function runs\n  }, [category, dispatch, categoryId, successUpdate, props.history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // todo: dispatch update product\n    dispatch(\n      updateCategory({\n        _id: categoryId,\n        name,\n        image,\n        description,\n      })\n    );\n  };\n\n  const [loadingUpload, setLoadingUpload] = useState(false);\n  const [errorUpload, setErrorUpload] = useState(\"\");\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"image\", file);\n    // setLoadingUpload(true);\n    try {\n      const { data } = await Axios.post(\"/api/uploads\", bodyFormData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      });\n\n      setImage(data);\n    } catch (error) {\n      setErrorUpload(error.message);\n      //   setLoadingUpload(false);\n    }\n  };\n\n  // UI part\n  return (\n    <div>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div>\n          <h1>Edit Category {categoryId}</h1>\n          <h1>test kaka{categoryId}</h1>\n        </div>\n        {loadingUpdate && <LoadingBox></LoadingBox>}\n        {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n\n        {loading ? (\n          <LoadingBox></LoadingBox>\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <>\n            <div>\n              <label htmlFor=\"name\">Name</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></input>\n            </div>\n\n            <div>\n              <label htmlFor=\"image\">Image</label>\n              <input\n                id=\"image\"\n                type=\"text\"\n                placeholder=\"Image\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></input>\n            </div>\n\n            <div>\n              <label htmlFor=\"imagefile\">Upload Image </label>\n              <input\n                type=\"file\"\n                id=\"imagefile\"\n                label=\"Upload Image\"\n                onChange={uploadFileHandler}\n              ></input>\n              {loadingUpload && <LoadingBox></LoadingBox>}\n            </div>\n\n            <div>\n              <label htmlFor=\"description\">Description</label>\n              <textarea\n                id=\"description\"\n                rows=\"3\"\n                type=\"text\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></textarea>\n            </div>\n\n            <div>\n              <label></label>\n              <button className=\"primary\" type=\"submit\">\n                Update\n              </button>\n            </div>\n          </>\n        )}\n      </form>\n    </div>\n  );\n}\n\n// lera kaka\n// import React from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import Card from 'react-bootstrap/Card';\n// import { Link } from 'react-router-dom';\n// import {\n//   addToCart,\n//   addToFavorite,\n//   removeFromFavorite,\n// } from '../actions/cartActions';\n// import Rating from './Rating';\n// import Tooltip from 'react-bootstrap/Tooltip';\n// import OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n// import Preview from '@mui/icons-material/Preview';\n// import FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\n// import Favorite from '@mui/icons-material/Favorite';\n// import AddShoppingCart from '@mui/icons-material/AddShoppingCart';\n\n// export default function Product(props) {\n//   const { product } = props;\n//   const renderTooltipv = <Tooltip>View Product</Tooltip>;\n//   const renderTooltipr = <Tooltip>Remove from Wishlist</Tooltip>;\n//   const renderTooltipf = <Tooltip>Add to Wishlist</Tooltip>;\n//   const renderTooltipc = <Tooltip>Add to Cart</Tooltip>;\n\n//   const favorite = useSelector((state) => state.favorite);\n//   const { favoriteItems } = favorite;\n\n//   const dispatch = useDispatch();\n\n//   const addToFavoriteHandler = () => {\n//     if (favoriteItems.product) {\n\n//       dispatch(removeFromFavorite(product._id));\n//     } else {\n//       dispatch(addToFavorite(product._id));\n//     }\n//     console.log(favoriteItems.product);\n//   };\n\n//   return (\n//     <Card\n//       key={product._id}\n//       className=\"container box d-flex w-100 col-md-3 col-sm-4\"\n//     >\n//       <div className=\"card-img-top\">\n//         <img src={product.image} className=\"card-img-top\" alt={product.name} />\n\n//         <ul className=\"icon\">\n//           <OverlayTrigger placement=\"left\" overlay={renderTooltipv}>\n//             <li className=\"preview-color\">\n//               <Link\n//                 className=\"preview-color-link\"\n//                 to={`/product/${product._id}`}\n//               >\n//                 <Preview />\n//               </Link>\n//             </li>\n//           </OverlayTrigger>\n//           <li className=\"preview-color\">\n//             {favoriteItems? (\n//               <OverlayTrigger placement=\"left\" overlay={renderTooltipr}>\n//                 <Favorite onClick={() => addToFavoriteHandler(product._id)} />\n//               </OverlayTrigger>\n//             ) : (\n//               <OverlayTrigger placement=\"left\" overlay={renderTooltipf}>\n//                 <FavoriteBorderIcon\n//                   onClick={() => addToFavoriteHandler(product._id)}\n//                 />\n//               </OverlayTrigger>\n//             )}\n//           </li>\n//           <OverlayTrigger placement=\"left\" overlay={renderTooltipc}>\n//             <li className=\"preview-color\">\n//               {product.countInStock === 0 ? (\n//                 <AddShoppingCart\n//                   onClick={(e) => dispatch(addToCart(product._id, 1))}\n//                   disabled\n//                 />\n//               ) : (\n//                 <AddShoppingCart\n//                   onClick={(e) => dispatch(addToCart(product._id, 1))}\n//                 />\n//               )}\n//             </li>\n//           </OverlayTrigger>\n//         </ul>\n//       </div>\n//       <Card.Body className=\"center\">\n//         <Link className=\"text-color\" to={`/product/${product._id}`}>\n//           <div>{product.name}</div>\n//         </Link>\n//         <Rating\n//           rating={product.rating}\n//           numReviews={product.numReviews}\n//         ></Rating>\n//         <Card.Text>\n//           <div className=\"price-color\">${product.price}</div>\n//           <div>\n//             <Link to={`/seller/${product.seller._id}`}>\n//               {product.seller.seller.name}\n//             </Link>\n//           </div>\n//         </Card.Text>\n//       </Card.Body>\n//     </Card>\n//   );\n// }\n\n//lera too\n"]},"metadata":{},"sourceType":"module"}